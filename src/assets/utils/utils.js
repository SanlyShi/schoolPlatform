import $ from 'jquery'
import { icons } from './icon.js'
// import {$waiting} from '../plugins/dialog/waiting/waiting.js'
import { Loading } from 'element-ui'
// import { resolve } from 'url'

let mainVueInstance

export function setMainVueInstance (instance) {
  mainVueInstance = instance
}
function checkXss (obj) {
  //
  for (let i in obj) {
    let reg = /<[^>]+>/g // 匹配是否含有html标签
    if (typeof obj[i] === 'string') {
      // 只匹配字符串参数需要3-6毫秒的时间
      if (reg.test(obj[i])) {
        // 参数里面匹配到了标签,
        return false
      }
    }
  }
  return true
}
export function sAjax (options, secondTime) {
  if (secondTime) {
    return $.ajax(options)
  }
  if (options.data) {
    let safety = checkXss(options.data)
    if (!safety) {
      const whitelist = [
        '/settings/forms',
        '/employment/company/addCompany',
        'employment/manage/preachMeeting/addPreachMeeting',
        '/employment/area/addArea',
        '/employment/area/updateArea',
        '/mentality/config/readme',
        '/announcement/announcement/',
        '/announcement/addAnnouncement',
        '/settings/cache',
        '/publishBusiness',
        '/employment/manage/doubleChoose/addDoubleChoose',
        '/employment/manage/doubleChoose/updateDoubleChoose',
        '/employment/manage/networkMeeting/addNetworkMeeting',
        '/employment/manage/networkMeeting/updateNetworkMeeting',
        '/api/employment/networkMeeting/applyNetworkMeeting',
        '/api/employment/manage/doubleChoose/reserveBooth',
        '/employment/doubleChoose/addDoubleChooseAudit',
        '/api/employment/doubleChoose/updateDoubleChooseAudit',
        '/api/employment/audit/agreeDoubleChooseAudit',
        '/updateOneBase',
        '/saveOneBase',
        '/api/employment/manage/networkMeeting/netWorkAddCompany',
        '/api/employment/manage/networkMeeting/agreeApply',
        '/api/employment/manage/participant/update',
        'updateArrangeContent',
        'updateOneArrange',
        '/trip/insertArrange',
        '/api/employment/manage/company/updateDetail',
        '/api/employment/audit/agreeCompanyAudit',
        '/api/employment/manage/recruitment/addRecruitment',
        '/api/employment/manage/company/addCompany',
        '/api/employment/manage/recruitment/updateRecruitment',
        '/api/employment/audit/agreeRecruitmentAudit',
        '/api/employment/recruitment/updateRecruitment',
        '/api/employment/recruitment/addRecruitment',
        '/api/employment/preachMeeting/addPreachMeeting',
        '/api/employment/preachMeeting/updatePreachMeeting',
        '/api/employment/manage/preachMeeting/updatePreachMeeting',
        '/api/employment/examination/addExamination',
        '/api/employment/examination/resubmit',
        '/api/employment/manage/examination/update',
        '/api/employment/manage/examination/addExamination',
        '/api/cms/module/addModule',
        '/api/cms/module/updateModule',
        '/api/employment/manage/preachMeeting/agreeApply',
        '/api/fts/notice/addNotice',
        '/api/cms/system/updateBanner',
        '/api/message/iSignIn/insertByUserId',
        '/api/message/iSignIn'

      ]
      let inWhitelist = false
      for (const url of whitelist) {
        if (options.url.indexOf(url) !== -1) {
          inWhitelist = true
        }
      }
      // 应用设置表单的接口有个公式编辑,里面会含有div,所以放行,还有富文本的也要放行,不知道接口是啥
      if (!inWhitelist) {
        return new Promise((resolve, reject) => {
          console.log('errorOptions', JSON.parse(JSON.stringify(options)))
          alert('非法参数')
        })
      }
    }
  }
  if(options.url.substring(0,1) != '/'){
    options.url = '/'+options.url
  }
  if (options.contentType !== false) {
    options.contentType = 'application/json'
    if (options.type == null) {
      options.type = 'get'
    }
    if (
      options.data !== null &&
      options.type.toLowerCase() !== 'get' &&
      options.type.toLowerCase() !== 'delete'
    ) {
      options.data = JSON.stringify(options.data)
    }
  }
  options.headers = options.headers || {}
  options.headers['X-Requested-With'] = 'XMLHttpRequest'
  options.crossDomain = true
  if (
    options.url.indexOf('export') !== -1 ||
    options.url.indexOf('Export') !== -1 ||
    options.url.indexOf('upload') !== -1
  ) {
    // 如果是导入
    options.timeout = 1000000
  } else {
    options.timeout = 3000000
  }
  let oriSuccess =
    options.success ||
    (() => {
      console.log('success function not found')
    })
  options.success = function (data) {
    if (data.unauthorized && mainVueInstance) {
      mainVueInstance.readyToAsyncLogin(this)
    } else {
      oriSuccess(data)
    }
  }
  // if(options.url.indexOf('download')!=-1){
  //   return newPromise((resolve,reject)=>{
  //     let options = {
  //       url:'b',
  //       success:function() {
  //       }
  //     }
  //     sAjax(options)
  //   })
  // }
  return $.ajax(options)
}

/**
 * return Promise;
 */
export function pAjax (params, options) {
  const oriSuccessFunc = params.success
  const oriErrorFunc = params.error
  const resultPromise = new Promise((resolve, reject) => {
    params.success = result => {
      oriSuccessFunc && oriSuccessFunc(result)
      resolve(result)
    }
    params.error = result => {
      oriErrorFunc && oriErrorFunc(result)
      reject(result)
    }
    sAjax(params, options)
  })
  return resultPromise
}

export function request (url, options, type) {
  let $waiting = Loading.service({background: 'rgba(255,0,0,0)'})
  return new Promise((resolve, reject) => {
    switch (type) {
      case 'get':
        sAjax({
          url: url,
          type: 'get',
          data: options,
          success: data => {
            $waiting.close()
            resolve(data)
          },
          error: err => {
            reject(err)
          }
        })
        break
      case 'put':
        sAjax({
          url: url,
          type: 'put',
          data: options,
          success: data => {
            $waiting.close()
            resolve(data)
          },
          error: err => {
            reject(err)
          }
        })
        break
      case 'delete':
        sAjax({
          url: url,
          type: 'delete',
          data: options,
          success: data => {
            $waiting.close()
            resolve(data)
          },
          error: err => {
            reject(err)
          }
        })
        break
      case 'post':
        sAjax({
          url: url,
          type: 'post',
          data: options,
          success: data => {
            $waiting.close()
            resolve(data)
          },
          error: err => {
            reject(err)
          }
        })
        break
      default:
        if (options) {
          // 有options为post请求
          sAjax({
            url: url,
            type: 'post',
            data: options,
            success: data => {
              $waiting.close()
              resolve(data)
            },
            error: err => {
              reject(err)
            }
          })
        } else {
          // get请求
          sAjax({
            url: url,
            type: 'get',
            success: data => {
              $waiting.close()
              resolve(data)
            },
            error: err => {
              reject(err)
            }
          })
        }
        break
    }
  })
}
export function debounce (func, wait, immediate) {
  let timeout
  return function () {
    let context = this
    let args = arguments
    let later = function () {
      timeout = null
      if (!immediate) func.apply(context, args)
    }
    let callNow = immediate && !timeout
    clearTimeout(timeout)
    timeout = setTimeout(later, wait)
    if (callNow) func.apply(context, args)
  }
}

export function createTime () {
  return new Date().getTime()
}

export function translation (lang = 'zh-cn') {
  if (!lang) {
    lang = 'zh-cn'
  }
  var l = {
    'zh-cn': {
      formEngineFields: {
        tableTitle: '参与角色',
        college: '学院',
        name: '姓名',
        stuId: '学号'
      },
      mainPage: {
        tableName: '首页',
        myAffairs: '我的事务',
        affairs: '事务',
        examineAll: '查看全部',
        myInitiate: '我的发起',
        myWaitHandle: '我的待办',
        transferToMe: '转交给我',
        copySendToMe: '抄送给我',
        initiate: '我的',
        waitHandle: '待办',
        transfer: '转交',
        copySend: '抄送',
        opt: '操作',
        check: '查看',
        statistics: '统计',
        myProcessInstance: '我发起的',
        waiting: '我待办的',
        myProcess: '我处理的',
        apply: '应用',
        placeholder: '搜索内容',
        updatedTime: '发起时间',
        status: '状态',
        back: '返回',
        student: '学生应用',
        teacher: '教工应用',
        freshman: '新生应用',
        popularApply: '推荐应用',
        noDataText: '没有相关事务',
        searchName: '业务',
        myAffairPlaceholder: '请输入搜索内容',
        startTime: '筛选时间起点',
        endTime: '筛选时间终点',
        process: '等待处理',
        end: '已结束',
        of: '的',
        you: '你',
        handleNode: '经办节点',
        handleTime: '经办时间',
        announce: '公告',
        all: '全部',
        school: '全校',
        college: '全院',
        instructor: '辅导员',
        noMore: '--没有更多数据咯--',
        more: '查看更多>>',
        empty: '暂无数据哟~'
      },
      userPortrait: {
        startTime: '开始日期',
        endTime: '结束日期'
      },
      departmentManage: {
        tableName: '部门列表',
        search: '搜索与筛选',
        addNew: '新增',
        addSuccessTip: '新增成功',
        addFailedTip: '新增失败',
        department: '部门',
        departmentName: '部门名称',
        opt: '操作',
        departmentNamePlaceholder: '请搜索部门名称',
        cancel: '取消',
        edit: '编辑',
        editSuccessTip: '编辑成功',
        editFailedTip: '编辑失败',
        remove: '删除',
        removeConfirmTip: '确认要删除吗？删除后数据将无法恢复',
        removeSuccessTip: '删除成功',
        removeFailedTip: '删除失败',
        cancelConfirmTip: '确认要关闭弹窗吗？关闭后数据将无法恢复',
        confirm: '确定'
      },
      personnelManage: {
        tableName: '人员列表',
        search: '搜索与筛选',
        addNew: '新增',
        addSuccessTip: '新增成功',
        addFailedTip: '新增失败',
        personnel: '人员',
        personnelName: '人员名称',
        opt: '操作',
        personnelNamePlaceholder: '请输入姓名',
        personnelIdPlaceholder: '请输入学工号',
        cancel: '取消',
        edit: '编辑',
        editSuccessTip: '编辑成功',
        editFailedTip: '编辑失败',
        remove: '删除',
        removeConfirmTip: '确认要删除吗？删除后数据将无法恢复',
        removeSuccessTip: '删除成功',
        removeFailedTip: '删除失败',
        confirm: '确定',
        check: '检测',
        studentId: '学工号',
        studentName: '姓名',
        department: '部门',
        departmentName: '部门名称',
        permissions: '权限',
        cancelEditText: '确认要关闭弹窗吗？关闭后数据将无法恢复',
        enterStudentId: '请输入学工号'
      },
      relationshipManage: {
        tableName: '学生列表',
        search: '搜索',
        addNew: '添加',
        edit: '编辑',
        set: '设置',
        submitSuccessTip: '提交成功',
        submitFailedTip: '提交失败',
        batch: '批量',
        reset: '重置',
        isSet: '是否分配',
        delete: '删除',
        sure: '确定',
        back: '返回',
        cancel: '取消',
        name: '姓名',
        studentId: '学号',
        teacherAndStudentId: '学工号',
        department: '系别',
        studentType: '学生类别',
        grade: '年级',
        phoneNumber: '手机号码',
        optRecord: '操作记录',
        college: '学院',
        major: '专业',
        instructor: '辅导员',
        exchange: '更换',
        export: '导出',
        transfer: '转移',
        advancedSearch: '高级搜索',
        namePlaceholder: '请输入姓名',
        studentIdPlaceholder: '请输入学号',
        submit: '提交',
        check: '检测',
        relationship: '带生关系',
        transferOutText: '转出的辅导员学工号',
        transferInText: '转入的辅导员学工号',
        transferText:
          '设置成功后转出辅导员分管的所有学生将全部转至转入辅导员下',
        notSelectedText: '您尚未勾选任何学生，通过列表中序号左侧勾选框勾选',
        selectedText: '您已勾选',
        namesStudent: '名学生',
        resetSelectedText: '确定重置他们的辅导员吗',
        setSelectedText: '请在下方输入辅导员工号',
        transferResultText: '该辅导员共分管',
        overriteImport: '覆盖导入',
        incrementImport: '增量导入',
        instructorBatchSet: '辅导员带生关系批量设置',
        resetHoverText: '勾选学生后点击<重置>可将辅导员置为空',
        enterStudentId: '请输入学工号'
      },
      relationClassManage: {
        classTabName: '班级管理',
        memberTabName: '人员管理'
      },
      classManage: {
        tableName: '班级列表',
        addNew: '新增',
        search: '搜索与筛选',
        add: '添加',
        create: '创建',
        classes: '编班',
        export: '导出',
        confirmAdd: '确认添加',
        edit: '编辑',
        batch: '批量',
        set: '设置',
        sure: '确定',
        cancel: '取消',
        opt: '操作',
        name: '姓名',
        studentId: '学号',
        student: '学生',
        learnLevel: '学习层次',
        teacherAndStudentId: '学工号',
        department: '系别',
        studentType: '学生类别',
        grade: '年级',
        college: '学院',
        instructor: '辅导员',
        class: '班级',
        classFullName: '班级全称',
        established: '成立时间',
        dissolutionTime: '解散时间',
        headTeacher: '班主任',
        members: '成员',
        classMembers: '班级成员',
        numberOfMembers: '成员数',
        namePlaceholder: '请输入姓名',
        studentIdPlaceholder: '请输入学号',
        submit: '提交',
        check: '检测',
        templateSelect: '模板选择',
        relationship: '带生关系',
        situation: '情况',
        remove: '删除',
        removeConfirmTip: '确认要删除吗？删除后数据将无法恢复',
        removeSuccessTip: '删除成功',
        removeFailedTip: '删除失败',
        editSuccessTip: '编辑成功',
        editFailedTip: '编辑失败',
        orderNumber: '序号',
        faculty: '系',
        bigClass: '大类',
        facultyPlaceholder: '选择一个辨别度比较强的来作为班级名称要素或不填',
        orderNumberPlaceholder: '可多选，若不分班则不选',
        will: '将要',
        already: '已',
        all: '所有',
        inChargeOf: '我分管的',
        not: '未',
        serve: '任职',
        startTime: '开始时间',
        endTime: '结束时间',
        committee: '委员',
        historyRecord: '历史记录',
        position: '职位',
        classCommittee: '班委',
        customize: '自定义',
        submitSuccessTip: '恭喜您，创建成功',
        submitFailedTip: '提交失败',
        willBeCreated: '将要创建',
        pieceClass: '个班级',
        classNameText: '班级名为',
        createdText: '该条件下已创建',
        noClassText: '该条件下还没有班级，快来创建吧~',
        classText: '班',
        noExist: '该学号不存在',
        improveClassInfo: '请完善班级信息',
        overriteImport: '覆盖导入',
        incrementImport: '增量导入',
        noSelectedCollege: '请选择学院',
        noSelectedGrade: '请选择年级',
        noSelectedLevel: '请选择学习层次',
        enterStudentId: '请输入学工号',
        cancelEditText: '确认要关闭弹窗吗？关闭后数据将无法恢复'
      },
      payHallManage: {
        tableName: '缴费项目',
        addNew: '新增',
        search: '搜索与筛选',
        add: '添加',
        create: '创建',
        classes: '编班',
        export: '导出',
        confirmAdd: '确认添加',
        edit: '编辑',
        batch: '批量',
        set: '设置',
        sure: '确定',
        cancel: '取消',
        opt: '操作',
        name: '姓名',
        studentId: '学号',
        student: '学生',
        learnLevel: '学习层次',
        teacherAndStudentId: '学工号',
        department: '系别',
        studentType: '学生类别',
        grade: '年级',
        college: '学院',
        instructor: '辅导员',
        class: '班级',
        classFullName: '班级全称',
        established: '成立时间',
        dissolutionTime: '解散时间',
        headTeacher: '班主任',
        members: '成员',
        classMembers: '班级成员',
        numberOfMembers: '成员数',
        namePlaceholder: '请输入姓名',
        studentIdPlaceholder: '请输入学号',
        submit: '提交',
        check: '检测',
        templateSelect: '模板选择',
        relationship: '带生关系',
        situation: '情况',
        remove: '删除',
        removeConfirmTip: '确认要删除吗？删除后数据将无法恢复',
        removeSuccessTip: '删除成功',
        removeFailedTip: '删除失败',
        editSuccessTip: '编辑成功',
        editFailedTip: '编辑失败',
        orderNumber: '序号',
        faculty: '系',
        bigClass: '大类',
        facultyPlaceholder: '选择一个辨别度比较强的来作为班级名称要素或不填',
        orderNumberPlaceholder: '可多选，若不分班则不选',
        will: '将要',
        already: '已',
        all: '所有',
        inChargeOf: '我分管的',
        not: '未',
        serve: '任职',
        startTime: '开始时间',
        endTime: '结束时间',
        committee: '委员',
        historyRecord: '历史记录',
        position: '职位',
        classCommittee: '班委',
        customize: '自定义',
        submitSuccessTip: '恭喜您，创建成功',
        submitFailedTip: '提交失败',
        willBeCreated: '将要创建',
        pieceClass: '个班级',
        classNameText: '班级名为',
        createdText: '该条件下已创建',
        noClassText: '该条件下还没有班级，快来创建吧~',
        classText: '班',
        noExist: '该学号不存在',
        improveClassInfo: '请完善班级信息',
        overriteImport: '覆盖导入',
        incrementImport: '增量导入',
        noSelectedCollege: '请选择学院',
        noSelectedGrade: '请选择年级',
        noSelectedLevel: '请选择学习层次',
        enterStudentId: '请输入学工号',
        cancelEditText: '确认要关闭弹窗吗？关闭后数据将无法恢复'
      },
      enrollManage: {
        search: '搜索与筛选',
        addNew: '新增',
        batch: '批量',
        reset: '重置',
        sure: '确定',
        add: '新增',
        delete: '删除',
        edit: '编辑',
        sign: '签收',
        cancel: '取消',
        confirm: '确定',
        opt: '操作',
        name: '姓名',
        studentId: '学号',
        check: '查看',
        student: '学生',
        department: '系别',
        studentType: '学生类别',
        grade: '年级',
        college: '学院',
        instructor: '辅导员',
        position: '职位',
        class: '班级',
        single: '单条',
        remove: '移除',
        submit: '提交',
        export: '导出',
        archiveNo: '档案号'
      },
      fileManage: {
        search: '搜索与筛选',
        addNew: '新增',
        batch: '批量',
        reset: '重置',
        sure: '确定',
        add: '新增',
        delete: '删除',
        edit: '编辑',
        sign: '签收',
        cancel: '取消',
        confirm: '确定',
        opt: '操作',
        name: '姓名',
        studentId: '学号',
        student: '学生',
        department: '系别',
        studentType: '学生类别',
        grade: '年级',
        college: '学院',
        instructor: '辅导员',
        position: '职位',
        class: '班级',
        single: '单条',
        remove: '移除',
        submit: '提交',
        file: '档案',
        archiveNo: '档案号'
      },
      classMembers: {
        tableName: '班级成员列表',
        search: '搜索与筛选',
        addNew: '新增',
        batch: '批量',
        reset: '重置',
        sure: '确定',
        cancel: '取消',
        opt: '操作',
        name: '姓名',
        studentId: '学号',
        student: '学生',
        department: '系别',
        studentType: '学生类别',
        grade: '年级',
        college: '学院',
        instructor: '辅导员',
        position: '职位',
        class: '班级',
        single: '单条',
        remove: '移除',
        submit: '提交',
        removeConfirmTip: '确定移除该成员吗?',
        removeSuccessTip: '移除成功',
        removeFailedTip: '移除失败',
        check: '检测',
        singleAddText: '请先输入学工号，点击<检测>',
        submitSuccessTip: '提交成功',
        submitFailedTip: '提交失败',
        noExist: '该学号不存在',
        parentPage: '返回班级列表',
        overriteImport: '覆盖导入',
        incrementImport: '增量导入',
        placeholder: '请输入您分管学院的学生学工号',
        enterStudentId: '请输入学工号'
      },
      classMembersManage: {
        tableName: '人员列表',
        search: '搜索与筛选',
        sure: '确定',
        cancel: '取消',
        opt: '操作',
        name: '姓名',
        studentId: '学号',
        student: '学生',
        department: '系别',
        studentType: '学生类别',
        grade: '年级',
        college: '学院',
        instructor: '辅导员',
        class: '班级名称',
        classes: '编班',
        submit: '提交',
        already: '已',
        not: '未',
        classFullName: '班级全称',
        notSelectedText: '您尚未勾选任何学生，通过列表中序号左侧勾选框勾选',
        selectedText: '已选中',
        namesStudent: '名学生',
        writeClassName: '请填写班级名称',
        studentIdPlaceholder: '请输入学号',
        classNamePlaceholder: '请输入班级名称',
        instructorPlaceholder: '请输入辅导员',
        situation: '情况',
        submitSuccessTip: '提交成功',
        submitFailedTip: '提交失败'
      },
      collegeManage: {
        tableName: '学院管理',
        importTableName: '列表',
        search: '搜索与筛选',
        college: '学院名称',
        set: '设置',
        add: '添加',
        check: '检测',
        principal: '负责人',
        setSuccessTip: '设置成功',
        addSuccessTip: '新增成功',
        setFailedTip: '设置失败',
        addFailedTip: '新增失败',
        userId: '学工号',
        studentId: '学号',
        collegeCode: '学院代码',
        name: '姓名',
        updatedTime: '更新时间',
        opt: '操作',
        examine: '查看',
        cancel: '取消',
        edit: '编辑',
        editSuccessTip: '编辑成功',
        editFailedTip: '编辑失败',
        remove: '删除',
        removeConfirmTip:
          '删除会影响到系统所有的学院信息？确认要删除此学院吗？',
        removeSuccessTip: '删除成功',
        removeFailedTip: '删除失败',
        confirm: '确定',
        placeholder: '请输入学工号',
        import: '导入',
        editConfirmText:
          '编辑可能影响到系统所有的学院信息？确认要编辑学院名称吗？',
        submit: '提交',
        submitSuccessTip: '提交成功',
        submitFailedTip: '提交失败',
        collegeNamePlaceholder: '请输入学院名称',
        overriteImport: '覆盖导入',
        incrementImport: '增量导入'
      },
      import: {
        import: '导入',
        startImport: '开始导入',
        importing: '正在导入...',
        batch: '批量',
        error: '错误',
        tip: '提示',
        back: '返回',
        importFristText: '批量导入功能为您提供将现有数据大量同步到系统的便利',
        importSecondText:
          '请先下载下方的Excel模板，将您要导入的数据编辑在模板内，再选择“开始导入”，之后我们会把您编辑的数据覆盖到系统中',
        errorResultText:
          '您可以下载下方的Excel文件，出错的地方已为您用红色标注出来，直接修改即可再次导入',
        submitSuccessTip: '提交成功',
        submitFailedTip: '提交失败',
        cancel: '取消',
        submit: '确定'
      },
      formEngineInfo: {
        dropOff: '下架',
        release: '发布',
        applyNamePlaceholder: '设置应用名称(25字以内)',
        error: '出错啦',
        form: '表单',
        pleaseSet: '请设置',
        playersSet: '参与角色设置',
        remarkPlaceholder: '可以输入对该应用的简单说明，仅管理员可看到此说明',
        businessPeriod: '业务期',
        addNew: '新增',
        releaseBusinessPeriod: '发布本业务期',
        stopBusinessPeriod: '停用本业务期',
        businessPeriodDisabled: '本业务期已停用',
        businessTip: '请保存创建之后再进行其它操作哟',
        saveBusinessDeploy: '保存本业务期配置',
        editBusinessDeploy: '编辑本业务期',
        businessName: '名称',
        businessNamePlaceholder: '请输入业务期名称(30字以内)',
        grade: '年级',
        basicInfoTip: '来自应用同步',
        unboundForm: '未绑定表单',
        unlimited: '无限制',
        allFreshmen: '所有新生',
        allInstructor: '所有辅导员',
        filterByCondition: '按条件筛选',
        studentType: '学生类型',
        studentGrade: '学生年级',
        inSchoolStatus: '在校状态',
        educationLevel: '培养层次',
        uploadList: '上传名单',
        batchUpload: '批量上传',
        againUpload: '重新上传',
        export: '导出',
        noData: '暂无数据',
        noSet: '未设置',
        startTime: '开始时间',
        endTime: '结束时间',
        selectModal: '选择模板',
        modalTip: '请选择对应模板初始化表单',
        blankFormTemplate: '空白表单模板',
        modal: '模板',
        cancel: '取消',
        confirm: '确定',
        name: '姓名',
        userNo: '学号',
        freshmanNo: '新生账号',
        teacherNo: '教工号',
        instructorNo: '学工号',
        college: '学院',
        notAtSchool: '不在校',
        inSchool: '在校',
        baseInfo: '基本信息',
        timeSet: '时间设置',
        facePeople: '面向人员',
        description: '指南',
        schoolYear: '学年',
        level: '级',
        appNameTip: '点击右侧按钮编辑应用名称',
        appNote: '应用说明',
        peopleList: '人员列表',
        templateName: '学生名单导入模板',
        overriteImport: '覆盖导入',
        incrementImport: '增量导入',
        releaseBusinessConfirm: '确认发布本业务吗？',
        announcing: '发布中...',
        releaseBusinessSuccess: '业务期发布成功',
        stopBusinessConfirm: '业务停用之后将不可开启,确定停用该业务期？',
        removeBusinessConfirm: '确定删除该业务期？',
        removeSuccessTip: '删除成功',
        addNewTip: '请先设置该应用的表单和参与角色哟~',
        startTimeTip: '开始时间不能晚于结束时间',
        endTimeTip: '结束时间不能早于开始时间',
        saveBusinessSuccess: '业务期保存成功',
        releaseTip: '应用发布后将对用户可见，确定发布吗？',
        dropOffTip: '应用下架后将对用户不可见，确定下架吗？',
        success: '成功！',
        nameError: '出错啦：名称不能为空',
        modifySuccess: '修改成功',
        editIcon: '修改图标',
        directJump: '点击应用直接跳转',
        useBusiness: '点击申请跳转（使用业务期）',
        linkUrlPlaceholder: '请输入第三方链接'
      },
      joinRoleSetManage: {
        cancel: '取消',
        sure: '保存',
        relevanceTip: '请关联表单',
        relevanceTip2: '关联表单',
        nodeName: '节点名称',
        distributarySet: '分流配置',
        roleSet: '角色设置',
        createNewRole: '创建新的角色',
        readWritePermission: '读写权限',
        alreadyChecked: '已选',
        setInto: '项，设置为',
        operatingPermission: '操作权限',
        conditionName: '条件名称',
        conditionField: '条件字段',
        createBranch: '新建分支',
        other: '其它',
        backTip: '是否保存？',
        commitTip: '保存成功!',
        roleEmptyTip: '角色名不能为空',
        roleExistTip: '角色名已存在',
        removeNodeTip: '请先在流程图中删除该条件的连接点！',
        distributaryData: {
          bySchool: '全校统一汇总',
          byClass: '以班级关系分配',
          byTeacher: '以带生关系分配',
          byCollege: '以学院关系分配',
          byOrganization: '以社团组织关系分配',
          byBuilding: '公寓按楼栋分配',
          byParty: '以党组织关系分配',
          byTutor: '以导师关系分配',
          byVolunteer: '以志愿者分配'
        },
        operatorData: {
          required: '必填',
          optional: '选填',
          readonly: '只读',
          hide: '隐藏'
        }
      },
      freshmanMainPage: {
        apply: '应用',
        searchPlaceholder: '搜索您要办理的事务',
        guide: '迎新指南',
        tuitionFeeInfoStatus: '学费缴费',
        accommodationPaymentInfoStatus: '住宿缴费',
        studentAppearanceConsistency: '学生相貌一致性',
        admissionsInformationConsistency: '录取信息一致性',
        baseInformationConsistency: '基本信息一致性',
        studentsArrivingAtSchool: '学生到校指标',
        greenChannelApplicationStatus: '绿色通道申请',
        reservationsOnTheStatusOfApplicationForAdmissionStatus:
          '保留入学资格申请',
        announce: '公告',
        status: '状态',
        all: '全部',
        school: '全校',
        college: '全院',
        instructor: '辅导员',
        personInfoResult: '个人信息完善',
        arriveSchoolInfoResult: '抵校信息填写',
        militaryTrainingClothesInfoResult: '军训服装信息填写',
        noMore: '--没有更多数据咯--',
        more: '查看更多>>',
        empty: '暂无数据哟~'
      },
      freshmanManage: {
        tableName: '迎新管理',
        studentIdBinding: '学号绑定',
        add: '新增',
        freshmanAccount: '新生账号',
        editFreshmanGuide: '编辑新生指南',
        account: '账号',
        password: '新生密码',
        endTime: '迎新登录截止时间',
        studentId: '学号',
        name: '姓名',
        cancel: '取消',
        save: '保存',
        saveSuccessTip: '保存成功',
        saveFailedTip: '保存失败',
        overrideImport: '覆盖导入',
        incrementImport: '增量导入',
        execlName: '学号更新模板',
        freshmanInfoExeclName: '新生信息导入模板'
      },
      announcementManage: {
        name: '名称',
        announcement: '公告',
        writeAnnouncement: '写公告',
        publishTime: '发布时间',
        opt: '操作',
        pageViews: '浏览量',
        delete: '删除',
        continueEditing: '继续编辑',
        publish: '发布',
        draft: '存为草稿',
        titlePlaceholder: '请输入标题(30字以内)',
        contentPlaceholder: '请输入公告内容',
        insertPicture: '插入图片',
        insertAttachment: '插入附件',
        deleteConfirmText: '确认要删除此公告吗？',
        deleteSuccessTip: '删除成功！',
        saveSuccessTip: '保存成功！',
        publishSuccessTip: '发布成功！',
        titleTip: '标题不能为空',
        cancelEditText: '确认要关闭弹窗吗？关闭后数据将无法恢复',
        system: '所属系统'
      },
      organizationManage: {
        schoolTitle: '校级组织',
        collegeTitle: '院级组织',
        name: '组织名称',
        instructor: '指导老师',
        add: '新增',
        organization: '组织',
        cancel: '取消',
        confirm: '确定',
        namePlaceholder: '输入组织名称',
        instructorPlaceholder: '输入组织指导老师工号',
        batch: '批量',
        batchAddOrganization: '批量新增组织',
        export: '导出',
        opt: '操作',
        edit: '编辑',
        dsable: '禁用',
        enable: '启用',
        overriteImport: '覆盖导入',
        incrementImport: '增量导入',
        optTips: '操作成功',
        orgNameTips: '组织名称不能为空',
        orgInstructorNoTips: '指导老师工号不能为空',
        userNoExistedTip: '学号不能为空',
        member: '成员',
        position: '职务',
        back: '返回',
        userNo: '学号',
        enter: '输入',
        info: '信息',
        studentName: '姓名',
        college: '学院',
        delete: '移除',
        startTime: '开始时间',
        endTime: '结束时间',
        table: '列表',
        memberRemoveConfirmTip: '确定移除该成员吗？',
        positionRemoveConfirmTip: '确定移除该职务吗？',
        memberRemoveSuccessTip: '移除成功',
        memberRemoveFailedTip: '移除失败'
      },
      activityTypeManage: {
        title: '活动定位管理',
        opt: '操作',
        edit: '编辑',
        name: '活动类型名称',
        add: '新增',
        activityType: '活动定位',
        cancel: '取消',
        confirm: '确定',
        typeNamePlaceholder: '输入分类名称',
        setActivityReviewProcess: '设置活动审核流程',
        delete: '删除',
        removeConfirmTip: '确认要删除吗?',
        removeFailedTip: '删除失败'
      },
      activityContentTypeManage: {
        add: '新增',
        type: '类别',
        name: '名称',
        cancel: '取消',
        confirm: '确定',
        delete: '删除',
        category: '类别',
        select: '筛选',
        edit: '编辑',
        child: '子',
        typeNamePlaceholder: '请输入15字以内的类别名称',
        childTypePlaceholder: '同时新增一个或多个子类别(不能超过15字)'
      },
      activityDown: {
        title: '活动管理',
        activityName: '活动名称',
        publishTime: '发布时间',
        promulgator: '发布者',
        activityStatus: '活动状态',
        auditStatus: '审核状态',
        opt: '操作',
        down: '下架',
        show: '查看',
        downTips: '确认要下架活动吗？',
        deleteSuccessTip: '下架成功',
        deleteFailedTip: '下架失败'
      },
      account: {
        logout: '注销',
        login: '登录',
        visitor: '访客'
      },
      comboAndDate: {
        daysOfWeek: ['日', '一', '二', '三', '四', '五', '六'],
        limit: '到达选取上线啦，最多选择{{limit}}条',
        loading: '加载中...',
        minLength: '最小长度',
        months: [
          '一月',
          '二月',
          '三月',
          '四月',
          '五月',
          '六月',
          '七月',
          '八月',
          '九月',
          '十月',
          '十一月',
          '十二月'
        ],
        notSelected: '请选择',
        required: '必填',
        search: '搜索',
        datePlaceholder: '请选择日期'
      },
      nav: {
        navigation: '导航',
        searchPlaceholder: '搜索您要办理的事务'
      },
      table: {
        hiddenCol: '隐藏列',
        pageAllCheck: '全选页',
        tableAllCheck: '全选表',
        checked: '选中',
        strip: '条',
        searchCancel: '取消',
        searchGo: '搜索',
        colCheck: '选中',
        colOrder: '#',
        pageGoPlaceholder: '页',
        pageGoBtn: '跳转',
        page: '页',
        searchPlaceholder: '搜索 ',
        unsigned: '未定义',

        loading: '数据加载中~',
        isNullTip: '暂无数据哟~',
        total: '共',
        records: '条信息',
        eachPage: '每页'
      },
      tree: {
        searchPlaceholder: '输入搜索内容',
        searchIconTitle: '搜索',
        editIconTitle: '编辑',
        addIconTitle: '新增',
        deleteIconTitle: '删除',
        saveIconTitle: '保存',
        newNodeTitle: '新的节点'
      },

      manageTypeLayout: {},
      permission: {
        resource: '资源',
        optionId: '操作ID',
        optionName: '操作名',
        optionPlaceholder: '不能含有：号',
        resourceVal: '资源值',
        resourcePlaceholder: '不能含有：号',
        permissionList: '权限列表',
        cancel: '取消',
        saveSuccessTip: '修改成功',
        saveFailedTip: '修改失败',
        addSuccessTip: '新增成功',
        addFailedTip: '新增失败',
        add: '新增',
        edit: '编辑',
        confirmMsg: '确定删除该权限？',
        deleteSuccessTip: '删除成功',
        deleteFailedTip: '删除失败'
      },
      role: {
        tableName: '角色列表',
        addNew: '新增',
        addSuccessTip: '新增成功',
        addFailedTip: '新增失败',
        role: '角色',
        roleName: '角色名',
        usersGroup: '用户组',
        groupName: '用户组名',
        opt: '操作',
        roleNamePlaceholder: '请输入角色名称',
        cancel: '取消',
        bindResource: '绑定资源',
        resourceList: '资源列表',
        bind: '绑定',
        bindSuccessTip: '绑定成功',
        bindFailedTip: '绑定失败',
        bindUser: '绑定角色',
        bindUsers: '绑定用户组',
        usersList: '用户组列表',
        roleList: '角色列表',
        edit: '修改',
        editSuccessTip: '修改成功',
        editFailedTip: '修改失败',
        remove: '删除',
        removeConfirmTip: '确认删除？',
        removeSuccessTip: '删除成功',
        removeFailedTip: '删除失败',
        bindLimits: '绑定权限'
      },
      menuManage: {
        treeTitle: '菜单列表( 点击具体菜单绑定用户组 )',
        userTreeTitle: '绑定用户组',
        cancel: '取消',
        bind: '绑定',
        bindFailedTip: '绑定失败'
      },
      wordsManage: {
        tableName: '字典类型表',
        addNew: '新增',
        wordType: '字典类型',
        typeName: '字典类型名称',
        opt: '操作',
        wordsTree: '字典树',
        wordInfo: '字典信息',
        cancel: '取消',
        close: '关闭',
        edit: '修改',
        editSuccessTip: '修改成功',
        editFailedTip: '修改失败',
        remove: '删除',
        removeConfirmTip: '确认删除？',
        removeSuccessTip: '删除成功',
        removeFailedTip: '删除失败',
        addFailedTip: '新增失败',
        checkWords: '查看字典',
        dictValue: '字典值',
        sort: '排序值'
      },
      accountManage: {
        tableName: '账号列表'
      },
      projectManage: {
        typeTable: '项目类型列表',
        projectTable: '项目列表',
        projectName: '项目名称',
        opt: '操作',
        hrefType: '跳转类型',
        typeForm: '关联流程',
        typeOuter: '外链地址',
        showName: '用户面板展示名称',
        proType: '项目类型',
        school: '学校',
        college: '学院',
        addNew: '新增项目',
        addBusiness: '创建业务',
        checkBusiness: '查看业务',
        edit: '编辑',
        remove: '删除',
        removeConfirmTip: '确定删除该记录吗？',
        required: '必填',
        back: '返回',
        cancel: '取消',
        sure: '保存',
        checkPros: '查看项目',
        saveIconTitle: '保存',
        saveFailedTip: '保存失败'
      },
      schoolProManager: {
        tableName: '项目负责人列表',
        optLog: '操作日志',
        collegeName: '学院名称',
        projectName: '项目名',
        manager: '负责人',
        isSet: '是否设置负责人',
        set: '设置负责人',
        test: '检测',
        add: '添加负责人',
        testErrorTip: '未匹配到具体负责人哟~',
        managerExistTip: '负责人已存在',
        back: '返回',
        opt: '操作',
        yes: '是',
        no: '否'
      },
      bussinessManage: {
        bussinessTable: '业务表',
        bussinessName: '业务名称',
        projectName: '所属项目',
        bussinessLimit: '是否有时间限制',
        bussinessStart: '开始时间',
        bussinessEnd: '结束时间',
        schoolYear: '学年',
        bussinessStatus: '进行中',
        opt: '操作',
        addNew: '新增业务',
        edit: '编辑业务',
        remove: '删除',
        removeConfirmTip: '确定删除该记录吗？',
        back: '返回',
        cancel: '取消',
        sure: '保存',
        required: '必填',
        yes: '有',
        no: '无'
      },
      appManage: {
        student: '学生应用',
        teacher: '教工应用',
        freshman: '新生应用',
        instructor: '辅导员应用',
        workflow: '流程引擎',
        link: '第三方链接',
        form: '表单引擎',
        appManage: '应用管理',
        createApp: '创建应用',
        createAppPlaceholder: '请输入应用名称(25字内)',
        createAppType: '新建应用分类',
        createAppTypePlaceholder: '请输入16字内的应用分类名称',
        selectAppType: '选择应用类型',
        hot: '推荐应用',
        cancel: '取消',
        sure: '确定',
        appExistTip: '当前应用列表下存在应用，不能删除！',
        appTypeRemoveConfirm: '确定移除该应用类型吗？',
        appRemoveConfirm: '确定移除该应用吗？',
        appAddTip1: '应用类名不能为空哟~',
        appAddTip2: '请为该类选择一个大类哟~',
        appAddTip3: '推荐应用新增失败咯~',
        editTip1: '暂未开放',
        editTip2: '请设置好对应的应用信息哟~',
        saveSuccessTip1: '表单保存成功！',
        saveSuccessTip2: '流程保存成功！',
        saveSuccessTip3: '参与角色设置保存成功！',
        import: '导入',
        importApp: '导入应用',
        selectFile: '选择文件'
      },
      formManage: {
        empty: '空',
        backTip: '是否保存？',
        cancel: '取消',
        preview: '预览',
        sure: '保存',
        library: '控件库',
        searchPlaceholder: '搜索内容',
        from: '来自',
        basic: '基础控件',
        favor: '收藏控件',
        other: '其它表单控件',
        info: '所有信息控件',
        allCom: '全部系统内控件',
        script: '脚本',
        layout: '布局',
        help: '表单控件属性配置区域',
        title: '名称',
        basicAttr: '基本属性',
        styleAttr: '样式属性',
        verifyAttr: '校验属性',
        collectionAttr: '采集器属性',
        events: '触发器',
        on: '开',
        off: '关',
        init: '选项配置',
        defaultValue: '默认值',
        way: '方式',
        api: '接口',
        dict: '字典',
        add: '新增',
        remove: '删除',
        duplicateTip: '长按复制',
        hrTip: '拖拽更改宽度',
        vrTip: '拖拽更改高度',
        optionTip: '请输入选项名称',
        fileMaxSizeTip: '文件最大不得超过：',
        fieldTypeList: {
          input: '输入框',
          number: '数字框',
          radio: '单选框',
          checkbox: '复选框',
          select: '下拉单选框',
          datetime: '日期',
          label: '文本',
          image: '图片',
          splitLine: '分割线',
          attachment: '附件',
          map: '定位',
          table: '表格',
          nameCard: '名片',
          address: '省地市',
          signature: '电子签名'
        },
        attrName: {
          placeholder: '提示文字',
          nameCardType: '对应关系',
          nameCardTypeRoleId: '角色设置',
          rows: '最大行高',
          options: '选项',
          precision: '精度(小数点后几位)',
          dateFormat: '日期格式',
          autoNumber: '行号显示',
          checkable: '行选中',
          autoSelect: '自动选中',
          exportable: '允许导出',
          importable: '允许导入',
          joinStatistics: '加入统计维度',
          joinTableCompare: '加入报表对比',
          content: '内容',
          color: '线条颜色',
          borderTop: '上边线',
          borderBottom: '下边线',
          fontSize: '字体大小(px)',
          regexExpression: '正则规范',
          errorPrompt: '正则规范错误提示',
          maxWidth: '裁剪图宽(px)',
          maxHeight: '裁剪图高(px)',
          minWidth: '最小图宽(px)',
          minHeight: '最小图高(px)',
          maxLength: '最大长度',
          minLength: '最小长度',
          maxSelect: '最大选择数',
          minSelect: '最小选择数',
          maxValue: '最大值',
          minValue: '最小值',
          maxDate: '最大日期',
          minDate: '最小日期',
          fileFormat: '文件类型',
          fileMaxNumber: '最大数量',
          fileSize: '文件最大(KB)'
        },
        initial: {
          fixedValue: '固定值',
          sqlQuery: 'sql语句',
          dataSet: '数据集',
          dataField: '数据字段',
          url: 'api地址',
          method: '请求方式',
          key: '返回数据字段',
          params: '请求参数',
          className: '类名',
          functionName: '方法名',
          currentTime: '当前时间',
          definedTime: '自选时间',
          paramKey: '参数key',
          paramValue: '参数值',
          paramObj: '新增参数对',
          dynamic: '实时更新',
          keyInValidTip: '参数对值不能为空',
          keyExistTip: '参数key已存在'
        },
        collector: {
          flag: '是否采集',
          dataSet: '数据集',
          dataField: '数据字段',
          coverTable: '覆盖采集',
          deleteByKey: '采集删除'
        },
        eventsList: {
          FOCUS: '获得焦点',
          BLUR: '失去焦点',
          CHANGE: '值改变',
          showComponent: '控件显示',
          hideComponent: '控件隐藏',
          setText: '设置值',
          triggerEvent: '触发其它事件',
          script: '用户自定义脚本',
          formFields: '表单控件',
          formFieldsEvents: '控件事件',
          formFieldsValue: '控件值',
          fieldsList: '控件列表',
          valueList: '赋值列表',
          eventsList: '事件列表',
          actionList: '动作列表',
          orgAction: '组织动作',
          setAction: '配置动作',
          addEvent: '添加事件',
          addTip: '事件信息不全，请检查配置',
          set: '设置',
          valueTo: '值为',
          trigger: '触发',
          events: '事件',
          condition: '条件',
          caseName: '用例名称'
        }
      },
      flowSetManage: {
        cancel: '取消',
        sure: '保存',
        on: '开',
        off: '关',
        relevanceTip: '请关联表单',
        relevanceTip2: '关联表单',
        nodeName: '节点名称',
        applicant: '表单所属人',
        applyOnceLimit: '流程只允许一次申请',
        distributarySet: '分流配置',
        roleSet: '角色设置',
        createNewRole: '创建新的角色',
        newRolePlaceholder: '应用名称+节点名称+管理员',
        readWritePermission: '读写权限',
        alreadyChecked: '已选',
        setInto: '项，设置为',
        operatingPermission: '操作权限',
        conditionName: '条件名称',
        conditionField: '条件字段',
        createBranch: '新建分支',
        other: '其它',
        backTip: '是否保存？',
        commitTip: '保存成功!',
        roleEmptyTip: '角色名不能为空',
        roleExistTip: '角色名已存在',
        removeNodeTip: '请先在流程图中删除该条件的连接点！',
        distributaryData: {
          bySchool: '不分流',
          byClass: '以班级关系分流',
          byTeacher: '以带生关系分流',
          byCollege: '以学院关系分流',
          byOrganization: '以社团组织关系分流',
          byBuilding: '公寓按楼栋分流',
          byParty: '以党组织关系分流',
          byTutor: '以导师关系分流',
          byVolunteer: '以志愿者分流'
        },
        operatorData: {
          required: '必填',
          optional: '选填',
          readonly: '只读',
          hide: '隐藏'
        },
        permissionData: {
          reject: '驳回',
          rejectTo: '驳回至',
          lastNode: '上一节点',
          optional: '由此节点选择',
          rejectBackTo: '驳回后返回',
          flowWay: '按流程原路返回',
          revocation: '撤回',
          deliverTo: '转交',
          sendTo: '抄送',
          batch: '批量操作',
          cancelByUser: '发起者在此节点可以取消流程'
        },
        condition: {
          '=': '等于',
          include: '包含',
          exclude: '不包含',
          '<': '小于',
          '<=': '小于等于',
          '>': '大于',
          '>=': '大于等于',
          '!=': '不等于',
          between: '介于',
          notBetween: '非介于'
        }
      },
      orgManage: {
        tableName: '组织机构列表',
        importExcel: '导入数据',
        downLoad: '下载模板',
        orgName: '组织名称',
        orgCode: '机构代码',
        orgParentCode: '父机构代码',
        leaderName: '负责人',
        tags: '关联标签',
        opt: '操作',
        edit: '编辑',
        remove: '删除',
        removeConfirmTip: '确定删除该组织吗？',
        cancel: '取消',
        bindSuccessTip: '绑定标签 修改成功',
        tagsPlaceholder: "自定义标签，注意用','隔开~",
        pCodeTip: '未找到匹配的父机构',
        leaderTip: '未找到匹配的负责人'
      },
      infoManage: {
        addNew: '新增',
        edit: '编辑',
        show: '查看',
        studentIdBinding: '学号绑定',
        editBase: '编辑基本信息',
        tableName: '教师列表',
        tableNameStu: '学生列表',
        tableNameParticipator: '参与角色列表',
        cancel: '取消',
        back: '返回',
        save: '保存',
        confirm: '确定',
        search: '搜索',
        remove: '删除',
        modelDownload: '下载',
        modelImport: '模板导入',
        imageImport: '图片导入',
        initModel: '教师初始化模板',
        initModelStu: '学生初始化模板',
        baseModel: '教师基本信息模板',
        baseModelParticipator: '参与角色基本信息模板',
        baseModelStu: '学生基本信息模板',
        baseModelNewStu: '学号更新模板',
        statusModelStu: '学生学籍信息模板',
        stuBaseInfo: '基本信息',
        opt: '操作',
        importSuccessTip: '导入成功',
        importFailedTip: '导入失败',
        overrideImport: '覆盖导入',
        incrementImport: '增量导入',
        advancedSearch: '高级搜索',
        layoutManage: '布局管理',
        setTip: '请选择需要配置布局的培养层次(默认全部)',
        nullColumnTypesTip: '未检测到学生信息类别，不可设置布局!',
        successTip: '数据保存成功',
        startSet: '开始设置',
        reset: '重置',
        export: '导出',
        exportStat: '导出统计',
        schoolStudentManage: '全校学生信息',
        collegeStudentManage: '本院学生信息',
        myStudentManage: '分管学生信息',
        loading: '加载中...',
        teacherFields: {
          teacherId: '教工号',
          organisation: '单位号',
          name: '姓名',
          nameSpell: '姓名拼音',
          usedName: '曾用名',
          sex: '性别',
          birthday: '出生日期',
          birthPlace: '出生地',
          nativePlace: '籍贯',
          nation: '民族',
          nationality: '国籍',
          identificationType: '身份证件类型码',
          idCardType: '身份证件类型码',
          identificationNo: '身份证号',
          idCardNo: '身份证号',
          idCardValidity: '身份证有效期',
          maritalStatus: '婚姻状况',
          hongKongMacaoTaiwanOversea: '港澳台侨外码',
          healthStatus: '健康状态',
          faith: '宗教信仰',
          bloodType: '血型',
          highestEducation: '最高学历',
          degreeOfEducation: '文化程度',
          joinTheWorkingYears: '参加工作年月',
          timeToSchool: '来校时间',
          timeStartWage: '起薪日期',
          timeStartTeaching: '从教年月',
          authorizedStrength: '编制',
          workerCategory: '职工类别',
          courseSituation: '任课情况',
          fileNo: '档案编号',
          fileText: '档案文本',
          onTheJobState: '在职状态',
          speciality: '特长',
          photo: '照片',
          subjectType: '学科类别',
          primaryDiscipline: '一级学科',
          secondaryDiscipline: '二级学科',
          postalCode: '邮政编码',
          mailingAddress: '通信地址',
          homeAddress: '家庭地址',
          currentAddress: '现地址',
          registeredPermanentResidence: '户口所在地',
          accountCategory: '户口类别',
          officePhone: '办公电话',
          homePhone: '住宅电话',
          mobilePhone: '移动电话',
          fax: '传真电话',
          mail: '电子信箱',
          homePage: '主页',
          campusNo: '校区号'
        },
        infoFields: {
          studentId: '学号',
          freshmanId: '新生账号',
          examinationNumber: '考生编号',
          accountId: '账号',
          password: '密码',
          college: '学院代码',
          collegeName: '学院名称',
          department: '系别代码',
          grade: '年级',
          studentType: '学生类别',
          teacherId: '教工号',
          name: '姓名',
          nameSpell: '拼音姓名',
          usedName: '曾用名',
          passportName: '护照姓名',
          chineseName: '中文姓名',
          foreignFirstName: '外文姓',
          foreignLastName: '外文名',
          sex: '性别',
          organisation: '所在单位',
          phone: '联系方式',
          phoneNumber: '手机号码',
          instructor: '当前辅导员',
          mail: '电子邮箱',
          identificationNo: '身份证号',
          idCardType: '身份证件类型码',
          idCardNo: '身份证号',
          idCardValidity: '身份证有效期',
          birthday: '出生日期',
          originPlace: '生源地',
          region: '地区',
          nativePlace: '籍贯',
          villageStudent: '是否农村大学生',
          accountsNature: '原户口性质',
          domicilePlace: '户口所在地',
          continent: '洲别',
          motherLanguage: '母语',
          livingCity: '居住城市',
          birthPlace: '出生地点',
          faith: '宗教信仰',
          current: '是否应届',
          personnelRelationsIn: '人事关系是否转入我校',
          recordIn: '档案是否转入我校',
          haveEarning: '是否有固定工资收入',
          greenChannel: '是否绿色通道',
          loansEntrance: '是否通过生源地贷款入学',
          physicalCondition: '健康状况',
          weight: '体重',
          bloodType: '血型',
          height: '身高',
          areaType: '区域类别',
          dataSource: '数据来源',
          chineseLevel: '汉语水平',
          englishLevel: '英语水平',
          computerLevel: '计算机水平',
          expenditureMethod: '经费办法',
          userId: '用户id',
          permanentAddress: '常住地址',
          maritalStatus: '婚姻状况',
          undergraduateCollegesProfessional: '本科毕业院校所学专业',
          masterDegreeCollegesProfessional: '硕士毕业院校及所学专业',
          drGraduationCollegesProfessional: '博士毕业(或在读)院校及所学专业',
          speciality: '特长',
          hobbies: '爱好',
          mandarinLevel: '普通话水平',
          onTheJobState: '在岗状态',
          workerCategory: '职工类别',
          mainResearchTopics: '主要研究领域',
          asTheFirstClass: '担任第一课堂情况',
          certificates: '持有证书',
          namepy: '姓名拼音',
          highestEducation: '最高学历',
          degree: '学位',
          timeToSchool: '来校时间',
          typeOfTch: '教职工类别',
          adminPost: '行政职务',
          executiveLevel: '行政级别',
          professionalAndTechnicalProfession: '专业技术职务',
          workersTechnicalLevel: '工人技术等级',
          nation: '民族',
          politicalStatus: '政治面貌',
          hongKongMacaoTaiwanOversea: '港澳台侨外码',
          healthStatus: '健康状态',
          nationality: '国籍',
          source: '数据来源'
        }
      },
      announce: {
        title: '公告标题',
        addNew: '发布公告',
        tableName: '公告列表',
        showTime: '预发布时间',
        sure: '发布',
        back: '返回',
        opt: '操作',
        edit: '编辑',
        remove: '删除',
        removeConfirmTip: '确定删除该记录吗？'
      },
      instructorManage: {
        tableName: '学生列表',
        addNew: '新增',
        edit: '编辑',
        set: '辅导员绑定',
        isSet: '是否分配',
        remove: '解除绑定',
        removeConfirmTip: '确定解除绑定辅导员吗？',
        sure: '确定',
        back: '返回',
        cancel: '取消',
        name: '姓名',
        studentId: '学工号',
        college: '学院',
        instructor: '辅导员',
        testErrorTip: '匹配不到辅导员哟',
        yes: '已分配',
        no: '未分配',
        exchangeInstructor: '辅导员变更',
        exchange: '更换'
      },
      dictionaryManage: {
        tableTitle: '字典列表',
        addNew: '新增条目',
        dictionaryTypeName: '名称',
        dictionaryNameInputPlaceholder: '字典名称',
        dictionaryCreateOption: '新建选项',
        dictionaryOptionInputPlaceholder: '选项名称',
        dictionaryOption: '选项',
        operation: '操作',
        dictionaryTypeSearchPlaceholder: '请输入搜索的字典名称',
        dictionaryType: '字典',
        edit: '编辑',
        remove: '删除',
        cancel: '取消',
        submit: '确定',
        removeConfirmTip: '确定删除此选项吗？',
        editSuccessTip: '修改成功'
      },
      systemRoleManage: {
        tableTitle: '系统角色列表',
        add: '添加',
        clear: '清空',
        edit: '编辑',
        roleName: ' 角色名',
        operation: '操作',
        addUserTip: '请先检测用户',
        addUserConfirmTip: '确认添加用户到该角色吗？',
        user: '用户',
        role: '角色',
        userNo: '工号',
        username: '姓名',
        check: '检测',
        cancel: '取消',
        submit: '提交',
        clearComfirmTip: '你确定清空该角色下的所有用户吗?',
        checkUserTip: '请先输入用户的工号',
        userNoExistedTip: '用户不存在'
      },
      schoolRoleManage: {
        tableTitle: '校级角色列表',
        add: '添加',
        clear: '清空',
        edit: '编辑',
        roleName: ' 角色名',
        operation: '操作',
        addUserTip: '请先检测用户',
        addUserConfirmTip: '确认添加用户到该角色吗？',
        user: '用户',
        role: '角色',
        userNo: '工号',
        username: '姓名',
        check: '检测',
        cancel: '取消',
        submit: '提交',
        clearComfirmTip: '你确定清空该角色下的所有用户吗?',
        checkUserTip: '请先输入用户的工号',
        userNoExistedTip: '用户不存在',
        exchangeDimensionLabel1: '切换到用户维度',
        exchangeDimensionLabel2: '切换到角色维度',
        roleDescription: '角色说明'
      },
      collegeRoleManage: {
        tableTitle: '院级角色列表',
        add: '添加',
        clear: '清空',
        operation: '操作',
        addUserTip: '请先检测用户',
        addUserConfirmTip: '确认添加用户到该角色吗？',
        user: '用户',
        role: '角色',
        userNo: '工号',
        username: '姓名',
        check: '检测',
        cancel: '取消',
        submit: '提交',
        clearComfirmTip: '你确定清空该角色下的所有用户吗?',
        checkUserTip: '请先输入用户的工号',
        userNoExistedTip: '用户不存在',
        exchangeDimensionLabel1: '切换到用户维度',
        exchangeDimensionLabel2: '切换到角色维度',
        noManageCollegeTip: '你没有分管任何学院'
      },
      collegeRoleApproverManage: {
        tableTitle: '院级角色列表',
        add: '添加',
        edit: '编辑',
        clear: '清空',
        operation: '操作',
        addUserTip: '请先检测用户',
        addUserConfirmTip: '确认添加用户到该角色吗？',
        roleName: ' 角色名',
        user: '用户',
        role: '角色',
        userNo: '工号',
        username: '姓名',
        check: '检测',
        cancel: '取消',
        submit: '提交',
        clearComfirmTip: '你确定清空该角色下的所有用户吗?',
        checkUserTip: '请先输入用户的工号',
        userNoExistedTip: '用户不存在',
        exchangeDimensionLabel1: '切换到用户维度',
        exchangeDimensionLabel2: '切换到角色维度',
        noManageCollegeTip: '你没有分管任何学院',
        inputEmpNo: '请输入学工号',
        relationApplication: '关联应用'
      },
      schoolRoleApproverManage: {
        tableTitle: '校级角色审批人列表',
        add: '添加',
        edit: '编辑',
        clear: '清空',
        roleName: '角色名',
        userName: '用户名',
        operation: '操作',
        roleNameSearchPlaceholder: '请输入搜索的角色名',
        addUserTip: '请先检测用户',
        addUserConfirmTip: '确认添加用户到该角色吗？',
        user: '用户',
        userNo: '工号',
        username: '姓名',
        check: '检测',
        cancel: '取消',
        submit: '提交',
        clearComfirmTip: '你确定清空该角色下的所有用户吗?',
        checkUserTip: '请先输入用户的工号',
        userNoExistedTip: '用户不存在',
        exchangeDimensionLabel1: '切换到用户维度',
        exchangeDimensionLabel2: '切换到角色维度',
        inputEmpNo: '请输入学工号',
        relationApplication: '关联应用'
      },
      approverRoleManage: {
        addButton: '新增角色',
        tableTitle: '审批人角色列表',
        edit: '编辑',
        delete: '删除',
        roleName: '角色名称',
        operation: '操作',
        roleNameSearchPlaceholder: '请输入搜索的角色名',
        nameIsNull: '角色名不能为空',
        levelIsNull: '所属级别不能为空',
        addRoleConfirmTip: '确认添加该角色吗？',
        editRoleConfirmTip: '确认修改该角色吗？',
        level: '所属级别',
        role: '角色',
        cancel: '取消',
        submit: '提交',
        clearComfirmTip: '你确定删除该角色吗?',
        noManageCollegeTip: '你没有任何部门的管理角色权限'
      },
      userCertification: {
        tableTitle: '账号列表',
        import: '导入',
        account: '账号',
        password: '密码',
        templateExcelName: '账号导入模板',
        overrideImport: '覆盖导入'
      },
      iSign: {
        new: '新建',
        cancel: '取消',
        editName: '修改名称',
        editProjectName: '修改项目名称',
        editCategoryName: '修改分类名称',
        sure: '确定',
        listAll: '所有',
        listTypeManage: '管理',
        listTypeProxy: '代理',
        listTypeMine: '我的',
        search: '搜索',
        check: '检测',
        addProject: '新建项目',
        addProjectPlaceholder: '输入项目名称',
        addCategoryPlaceholder: '输入分类名称',
        selectCategory: '选择分类',
        peopleRestrition: '人员限制',
        proxySettings: '代理设置',
        addSign: '新建签到',
        add: '新建',
        export: '导出',
        refresh: '刷新',
        addSignPlaceholder: '输入签到名称',
        signStartPlaceholder: '选择签到开始时间',
        signEndPlaceholder: '选择签到结束时间',
        useDynamicCode: '使用动态码',
        scanQrcodeWithLocation: '是否包含位置信息',
        endTimeMustBeAfterStartTime: '签到结束时间必须在签到开始时间之后',
        endTimeMustBeAfterNow: '签到结束时间必须在当前时间之后',
        signInfo: {
          userName: '姓名',
          userNo: '学号',
          college: '学院',
          signStatus: '状态',
          editPeople: '添加人员',
          stat: '统计',
          recordByHand: '手动签到',
          remove: '移除',
          start: '开始',
          end: '结束',
          addPersonPlaceholder: '输入学工号',
          recordByHandPlaceholder: '输入手动签到原因',
          signTime: '签到时间',
          remark: '备注'
        },
        error: {
          networkError: '网络连接错误',
          dataError: '数据错误，请刷新页面重试',
          pleaseFillInName: '请填写名称',
          pleaseFillInCategoryName: '请填写分类名称',
          pleaseFillInProjectName: '请填写项目名称',
          pleaseChooseCategoryOrAddCategory: '请选择项目分类或新建项目分类',
          pleaseFillInSignName: '请填写签到名称',
          pleaseChooseStartTime: '请选择开始时间',
          pleaseChooseEndTime: '请选择结束时间',
          categoryNameIsExisted: '该分类已经存在'
        },
        tip: {
          addSignSuccess: '新增签到成功',
          addProjectSuccess: '新增项目成功',
          addCategorySuccess: '新增分类成功',
          deleteSuccess: '删除成功',
          removeSuccess: '移除成功',
          modifySuccess: '修改成功',
          setSuccess: '设置成功',
          saveSuccess: '保存成功'
        }
      },
      employmentUnitManage: {
        tableName: '用工单位管理',
        unitName: '单位名称',
        level: '级别',
        manager: '管理员',
        principal: '负责人',
        opt: '操作',
        edit: '编辑',
        batch: '批量',
        newAdd: '新增',
        employmentUnit: '用工单位',
        cancel: '取消',
        confirm: '确定',
        importBtnName: '增量导入',
        userId: '工号',
        userName: '姓名',
        check: '检测',
        add: '添加',
        checkManagerUserIdTip: '请先输入管理员的学工号',
        checkPrincipalUserIdTip: '请先输入负责人的学工号',
        userIdPlaceholder: '请输入学工号',
        userNoExistedTip: '用户不存在',
        addUserTip: '请先检测用户',
        userEistedTip: '用户已存在，请勿重复添加',
        unitNameNoExistedTip: '单位名称不能为空'
      },
      unitJobManage: {
        tableName: '单位岗位管理',
        jobDeclare: '岗位申报',
        jobUserManage: '岗位人员管理',
        job: '岗位',
        newAdd: '新增'
      },
      accommodationResources: {
        tableName: '住宿资源列表',
        add: '新增',
        edit: '编辑',
        single: '单个',
        batch: '批量',
        confirm: '确定',
        cancel: '取消',
        campus: '校区',
        park: '园区',
        building: '楼栋',
        buildingProperty: '楼栋属性',
        numberOfLayers: '层数',
        numberOfRooms: '每层房间数',
        opt: '操作',
        delete: '删除',
        roomsList: '房间列表',
        floorPlan: '平面图',
        overlayImport: '覆盖导入'
      },
      accommodationStaff: {
        peopleList: {
          allStaff: '全校人员列表',
          liveStaff: '在住人员列表'
        },
        export: '导出',
        add: '新增',
        single: '单个',
        batch: '批量',
        edit: '编辑',
        delete: '删除',
        check: '查看',
        import: '导入',
        cancel: '取消',
        confirm: '确定',
        peopleType: '人员类型',
        cultureLevel: '培养层次',
        schoolSystem: '学制',
        name: '姓名',
        set: '性别',
        freshmanNo: '新生账号',
        userNo: '学工号',
        college: '学院',
        grade: '年级',
        instructor: '辅导员',
        opt: '操作',
        overlayImport: '覆盖导入',
        templateName: '批量新增人员',
        formFieldsLabel: {
          staffSearch: '人员检索',
          campus: '校区',
          park: '园区',
          building: '楼栋',
          roomNumber: '房间号',
          expectedCheckInTime: '预计入住时间',
          realCheckInTime: '实际入住时间',
          expectedLeaveDormitoryTime: '预计退宿时间',
          realLeaveDormitoryTime: '实际退宿时间',
          bed: '床位',
          paymentSituation: '缴费情况',
          checkInSituation: '入住情况'
        }
      },
      entryAndEexit: {
        tableName: '入退管理',
        sure: '确定',
        cancel: '取消',
        name: '姓名',
        studentId: '学号',
        account: '新生账号',
        educationLevel: '培养层次 ',
        grade: '年级',
        college: '学院',
        studentIdPlaceholder: '请输入学号',
        namePlaceholder: '请输入姓名',
        accountIdPlaceholder: '请输入新生账号',
        paymentStatus: '缴费情况',
        dormitory: '当前宿舍',
        checkInStatus: '入住情况',
        opt: '操作',
        entryDormitory: '入住',
        leaveDormitory: '退宿',
        entryDormitoryConfirmTip: '确认将该学生入住？此操作不可恢复',
        leaveDormitoryConfirmTip: '确认将该学生退宿？此操作不可恢复',
        batchEntry: '批量入住',
        batchExit: '批量退宿',
        overlayImport: '覆盖导入'
      },
      pay: {
        tableName: '缴费管理',
        add: '新增',
        edit: '编辑',
        batch: '批次',
        batchName: '批次名称',
        batchNamePlaceholder: '请输入批次名称',
        schoolYear: '学年',
        id: '批次编号',
        opt: '操作',
        remove: '删除',
        removeConfirmTip: '确认要删除吗？删除后数据将无法恢复',
        removeSuccessTip: '删除成功',
        removeFailedTip: '删除失败',
        studentList: '学生列表',
        import: '名单导入',
        export: '导出',
        sure: '确定',
        cancel: '取消',
        overlayImport: '覆盖导入'
      },
      payStudentList: {
        parentPage: '返回缴费管理列表',
        tableName: '学生列表',
        batch: '批量',
        import: '导入',
        schoolYear: '学年',
        name: '姓名',
        studentId: '学号',
        account: '新生账号',
        college: '学院',
        educationLevel: '培养层次',
        grade: '年级',
        paymentStatus: '缴费情况',
        isGreenChannel: '绿色通道',
        remark: '备注',
        opt: '操作',
        studentNamePlaceholder: '请输入姓名',
        studentIdPlaceholder: '请输入学号',
        accountPlaceholder: '请输入新生账号',
        edit: '编辑',
        sure: '确定',
        cancel: '取消',
        overlayImport: '覆盖导入'
      },
      changingDormitory: {
        tableName: '调宿管理',
        name: '姓名',
        namePlaceholder: '请输入姓名',
        studentId: '学号',
        studentIdPlaceholder: '请输入学号',
        account: '新生账号',
        accountIdPlaceholder: '请输入新生账号',
        college: '学院',
        educationLevel: '培养层次',
        grade: '年级',
        dormitory: '当前宿舍',
        opt: '操作',
        singleChangingDormitory: '单人调宿',
        doubleChangingDormitory: '两人互调',
        userCheckInStatus: '入住情况',
        relCheckInTime: '入住时间',
        expectRetirementTime: '预退宿时间',
        currentStudentName: '当前学生',
        campus: '校区',
        park: '园区',
        building: '宿舍楼',
        roomNumber: '房号',
        bedNumber: '床位',
        checkFloorPlan: '查看平面图',
        changingDormitory: '调宿',
        cancel: '取消',
        changingDormitoryConfirmTip: '确认调宿吗？',
        check: '检测'
      },
      log: {
        logList: {
          inOutChangeRecord: '入退调记录',
          optRecord: '操作记录'
        },
        name: '姓名',
        userNo: '学号',
        dormitory: '房间',
        operation: '操作项',
        operatorType: '操作人类型',
        operatorUserNo: '操作人学工号',
        operatorName: '操作人姓名',
        operationTime: '操作时间',
        ip: 'ip',
        time: '时间',
        reset: '重置',
        search: '搜索',
        fileName: '文件名'
      },
      statistics: {
        statisticsList: {
          dormitoryStatistics: '房源统计',
          peopleStatistics: '人员统计'
        },
        campusName: '校区',
        zoneName: '园区',
        buildingName: '楼栋',
        totRoom: '房间总数',
        totBed: '床位总数',
        conditionRoom: '符合条件的房间数量',
        roomNo: '房间号',
        bedNo: '床号',
        usedFor: '房间用途',
        toilet: '卫生间类型',
        haveBalcony: '有无阳台',
        maxNumber: '房型',
        leftNumber: '空床数量',
        livingStatus: '居住情况',
        totUser: '在住人数',
        conditionUser: '符合条件的人员数量',
        userName: '姓名',
        userType: '人员类型',
        userNo: '学工号',
        sex: '性别',
        college: '学院',
        educationLevel: '培养层次',
        grade: '年级',
        userCheckInStatus: '入住情况',
        inTime: '（预计)入住时间',
        outTime: '（预计）退宿时间',
        time: '时间',
        reset: '重置',
        search: '统计',
        export: '导出',
        switchDormitoryDetailedTable: '切换到房源详表',
        switchStatisticsTable: '切换到统计列表',
        switchPeopleDetailedTable: '切换到人员详表'
      }
    },

    en: {
      mainPage: {
        tableName: 'mainPage',
        myAffairs: 'my affairs',
        affairs: 'affairs',
        examineAll: 'examine all',
        myInitiate: 'my initiate',
        myWaitHandle: 'my wait handle',
        transferToMe: 'transfer to me',
        copySendToMe: 'copy to me',
        initiate: 'initiate',
        waitHandle: 'wait handle',
        transfer: 'transfer',
        copySend: 'copy send',
        check: 'check',
        opt: 'options',
        statistics: 'statistics',
        myProcessInstance: 'I initiate',
        waiting: 'I wait handle',
        myProcess: 'I process',
        apply: 'apply',
        placeholder: 'search content',
        permissions: 'permissions',
        updatedTime: 'updated time',
        status: 'status',
        back: 'back',
        student: 'student apply',
        teacher: 'teacher apply',
        freshman: 'freshman apply',
        popularApply: 'popular apply',
        noDataText: 'No related affairs',
        searchName: 'name',
        myAffairPlaceholder: 'Please enter content',
        startTime: 'start time',
        endTime: 'end time',
        process: 'waiting for processing',
        end: 'end',
        of: 'of',
        you: 'you',
        handleNode: 'handle node',
        handleTime: 'handle time',
        announce: 'announce',
        all: 'all',
        school: 'school',
        college: 'college',
        instructor: 'instructor',
        noMore: 'It is all, tks!',
        more: 'Go on to check!',
        empty: 'No message, tks!'
      },
      departmentManage: {
        tableName: 'Department List',
        search: 'search',
        addNew: 'add',
        addSuccessTip: 'add successfully',
        addFailedTip: 'Failed',
        department: 'Department',
        departmentName: 'DepartmentName',
        opt: 'options',
        departmentNamePlaceholder: 'department name please',
        cancel: 'cancel',
        edit: 'edit',
        editSuccessTip: 'edit successfully',
        editFailedTip: 'Failed',
        remove: 'remove',
        removeConfirmTip: 'Are you sure to remove this record?',
        removeSuccessTip: 'remove successfully',
        removeFailedTip: 'Failed',
        confirm: 'confirm',
        cancelConfirmTip:
          'Do you want to close the popup window? Data will not be recovered after it is closed',
        enterStudentId: 'Please enter user ID'
      },
      personnelManage: {
        tableName: 'Personnel List',
        search: 'search',
        addNew: 'add',
        addSuccessTip: 'add successfully',
        addFailedTip: 'Failed',
        personnel: 'personnel',
        personnelName: 'personnelName',
        opt: 'options',
        personnelNamePlaceholder: 'personnel name please',
        personnelIdPlaceholder: 'student ID please',
        cancel: 'cancel',
        edit: 'edit',
        editSuccessTip: 'edit successfully',
        editFailedTip: 'Failed',
        remove: 'remove',
        removeConfirmTip: 'Are you sure to remove this record?',
        removeSuccessTip: 'remove successfully',
        removeFailedTip: 'Failed',
        confirm: 'confirm',
        check: 'check',
        studentId: 'student ID',
        studentName: 'name',
        department: 'department',
        departmentName: 'department name',
        permissions: 'permissions',
        cancelEditText:
          'Do you want to close the popup window? Data will not be recovered after it is closed',
        enterStudentId: 'Please enter user ID'
      },
      relationshipManage: {
        tableName: 'Student List',
        search: 'search',
        addNew: 'add',
        edit: 'edit',
        set: 'set ',
        setSuccessTip: 'set successfully',
        setFailedTip: 'Failed',
        batch: 'batch ',
        reset: 'reset',
        isSet: 'isSet',
        delete: 'delete',
        sure: 'sure',
        cancel: 'cancel',
        name: 'name',
        studentId: 'student ID',
        teacherAndStudentId: 'user ID',
        department: 'department',
        studentType: 'student type',
        grade: 'grade',
        phoneNumber: 'phoneNumber',
        optRecord: 'operation Record',
        college: 'college',
        instructor: 'instructor',
        export: 'export',
        transfer: 'transfer',
        advancedSearch: 'advanced Search',
        namePlaceholder: 'Please enter the name',
        studentIdPlaceholder: 'Please enter the student ID',
        submit: 'submit',
        check: 'check',
        relationship: 'relationship',
        transferOutText: 'transfer out instructor ID',
        transferInText: 'transfer into instructor ID',
        transferText:
          'all students transferred out of the instructor after successful setting will be transferred to the instructor',
        notSelectedText:
          'you have not checked any students, check the box by the left side of the number in the list',
        selectedText: 'you have checked',
        namesStudent: 'students',
        resetSelectedText: 'are you sure to reset their instructor?',
        setSelectedText: 'please enter the instructor number below',
        transferResultText: 'the instructor is in charge of',
        overriteImport: 'overrite import',
        incrementImport: 'increment import',
        instructorBatchSet: 'instructor relationship batch set',
        resetHoverText:
          'Check student and click <Reset> to empty the instructor',
        enterStudentId: 'Please enter user ID'
      },
      relationClassManage: {
        classTabName: 'classManage',
        memberTabName: 'personnelManage'
      },
      classManage: {
        tableName: 'Class List',
        addNew: 'add',
        search: 'search',
        add: 'add',
        create: 'create ',
        classes: 'Classes',
        export: 'export',
        confirmAdd: 'confirm add',
        edit: 'edit',
        batch: 'batch',
        set: 'set',
        sure: 'sure',
        cancel: 'cancel',
        opt: 'operating',
        name: 'name',
        studentId: 'student ID',
        student: 'student',
        learnLevel: 'learn level',
        teacherAndStudentId: 'user ID',
        department: 'department',
        studentType: 'student type',
        grade: 'grade',
        college: 'college',
        instructor: 'instructor ',
        class: 'class',
        classFullName: 'class full name',
        established: 'found time',
        dissolutionTime: 'dissolution time',
        headTeacher: 'head teacher ',
        members: 'member',
        classMembers: 'class members',
        numberOfMembers: 'number of members',
        namePlaceholder: 'Please enter the name',
        studentIdPlaceholder: 'Please enter the student ID',
        submit: 'submit',
        check: 'check',
        templateSelect: 'template select',
        relationship: 'relationship',
        situation: 'situation',
        remove: 'remove',
        removeConfirmTip: 'Are you sure to remove',
        removeSuccessTip: 'remove successfully',
        removeFailedTip: 'Failed',
        orderNumber: 'order number',
        faculty: 'faculty',
        bigClass: 'big class',
        facultyPlaceholder:
          'Select a strong discrimination as the class name element or do not fill in',
        orderNumberPlaceholder:
          'Can be multi-selected, but not selected if there is no division into classes',
        will: 'will ',
        already: 'already ',
        all: 'all',
        inChargeOf: 'I am in charge of',
        not: 'not',
        serve: 'serve ',
        startTime: 'start time',
        endTime: 'end time',
        committee: 'committee',
        historyRecord: 'history record',
        position: 'position',
        classCommittee: 'class committee',
        customize: 'customize ',
        submitSuccessTip: 'submitted successfully',
        submitFailedTip: 'Failed',
        editSuccessTip: 'edit successfully',
        editFailedTip: 'Failed',
        willBeCreated: 'will be created',
        pieceClass: 'piece class',
        classNameText: 'class name',
        createdText: 'Created under this condition',
        noClassText:
          'There is no class under this condition. Come and create it',
        classText: 'class ',
        noExist: 'The student ID does not exist',
        improveClassInfo: 'Please improve class information',
        overriteImport: 'overrite import',
        incrementImport: 'increment import',
        noSelectedCollege: 'Please select a college',
        noSelectedGrade: 'Please select grade',
        noSelectedLevel: 'Please choose a level of study',
        enterStudentId: 'Please enter user ID',
        cancelEditText:
          'Do you want to close the popup window? Data will not be recovered after it is closed'
      },
      classMembers: {
        tableName: 'Class Members List',
        search: 'search',
        addNew: 'add',
        batch: 'batch',
        reset: 'reset',
        sure: 'sure',
        cancel: 'cancel',
        opt: 'operating',
        name: 'name',
        studentId: 'student ID',
        student: 'student',
        department: 'department',
        studentType: 'student type',
        grade: 'grade',
        college: 'college',
        instructor: 'instructor',
        position: 'position',
        class: 'class',
        single: 'single',
        remove: 'remove',
        submit: 'submit',
        removeConfirmTip: 'Are you sure to remove',
        removeSuccessTip: 'remove successfully',
        removeFailedTip: 'Failed',
        check: 'check',
        singleAddText: 'Please enter user ID and click <check>',
        submitSuccessTip: 'submitted successfully',
        submitFailedTip: 'Failed',
        noExist: 'The student ID does not exist',
        parentPage: 'back class list',
        overriteImport: 'overrite import',
        incrementImport: 'increment import',
        placeholder:
          'Please enter the number of students you are in charge of the college',
        enterStudentId: 'Please enter user ID'
      },
      classMembersManage: {
        tableName: 'Personnel List',
        search: 'search',
        sure: 'sure',
        cancel: 'cancel',
        opt: 'operating',
        name: 'name',
        studentId: 'student ID',
        student: 'student',
        department: 'department',
        studentType: 'student type',
        grade: 'grade',
        college: 'college',
        instructor: 'instructor',
        class: 'class name',
        classes: 'classes',
        submit: 'submit',
        already: 'already',
        not: 'not',
        classFullName: 'class full name',
        notSelectedText:
          'you have not checked any students, check the box by the left side of the number in the list',
        selectedText: 'you have checked',
        namesStudent: 'students',
        writeClassName: 'Please fill in the class name',
        studentIdPlaceholder: 'Please enter student ID',
        classNamePlaceholder: 'Please enter class name',
        instructorPlaceholder: 'Please enter instructor',
        situation: 'situation',
        submitSuccessTip: 'submitted successfully',
        submitFailedTip: 'Failed'
      },
      collegeManage: {
        tableName: 'College Manage',
        importTableName: 'College List',
        search: 'search',
        college: 'college',
        set: 'set',
        add: 'add',
        check: 'check',
        principal: 'principal',
        addSuccessTip: 'add successfully',
        setSuccessTip: 'set successfully',
        addFailedTip: 'Failed',
        setFailedTip: 'set Failed',
        userId: 'user ID',
        studentId: 'student ID',
        collegeCode: 'college code',
        name: 'name',
        updatedTime: 'updated time',
        opt: 'operating',
        examine: 'examine',
        cancel: 'cancel',
        edit: 'edit',
        editSuccessTip: 'edit successfully',
        editFailedTip: 'failed',
        remove: 'remove',
        removeConfirmTip:
          'Delete will affect all college information system? Are you sure you want to delete this college?',
        removeSuccessTip: 'remove successfully',
        removeFailedTip: 'failed',
        confirm: 'confirm',
        placeholder: 'Please enter user ID',
        import: 'import',
        editConfirmText:
          'Editing may affect all college information in the system? Are you sure you want to edit the college name?',
        submit: 'submit',
        submitSuccessTip: 'submit successfully',
        submitFailedTip: 'failed',
        collegeNamePlaceholder: 'Please enter college name',
        overriteImport: 'overrite import',
        incrementImport: 'increment import'
      },
      import: {
        import: 'import',
        startImport: 'start import',
        importing: 'importing',
        batch: 'batch ',
        error: 'error',
        tip: 'tip',
        back: 'back ',
        importFristText:
          'The bulk import feature gives you the convenience of massively synchronizing existing data to your system',
        importSecondText:
          'Please download the Excel template below, edit the data you want to import in the template, and select "Start Import". After that, we will overwrite your edited data in the system',
        errorResultText:
          'You can download the Excel file below. The error has been marked out in red for you.',
        submitSuccessTip: 'submitted successfully',
        submitFailedTip: 'Failed',
        cancel: 'cancel',
        submit: 'submit'
      },
      formEngineInfo: {
        dropOff: 'drop off',
        release: 'release',
        applyNamePlaceholder: 'Set application name (less than 25 words)',
        error: 'error',
        form: 'form',
        pleaseSet: 'please set',
        playersSet: 'players set',
        remarkPlaceholder:
          'You can enter a brief description of the app, only administrators can see this description',
        businessPeriod: 'business period',
        addNew: 'add',
        releaseBusinessPeriod: 'release this business period',
        stopBusinessPeriod: 'stop this business period',
        businessPeriodDisabled: 'This business period has been disabled',
        businessTip:
          'Please save the creation and then perform other operations',
        saveBusinessDeploy: 'Save this business period configuration',
        businessName: 'name',
        businessNamePlaceholder:
          'Please enter business name (less than 30 words)',
        grade: 'grade',
        basicInfoTip: 'from application synchronization',
        unboundForm: 'unbound form',
        unlimited: 'unlimited',
        allFreshmen: 'All freshmen',
        allInstructor: 'All Instructor',
        filterByCondition: 'filter by condition',
        studentType: 'student type',
        studentGrade: 'student grade',
        inSchoolStatus: 'school status',
        uploadList: 'upload list',
        batchUpload: 'batch upload',
        againUpload: 'again upload',
        export: 'export',
        noData: 'no data',
        noSet: 'not set',
        startTime: 'start time',
        endTime: 'end time',
        selectModal: 'select modal',
        modalTip:
          'Please select the corresponding template to initialize the form',
        blankFormTemplate: 'blank form template',
        modal: 'modal',
        cancel: 'cancel',
        confirm: 'confirm',
        name: 'name',
        userNo: 'userNo',
        freshmanNo: 'freshmanNo',
        teacherNo: 'teacherNo',
        instructorNo: 'instructorNo',
        college: 'college',
        notAtSchool: 'not at school',
        inSchool: 'in school',
        baseInfo: 'base info',
        facePeople: 'face people',
        timeSet: 'time set',
        description: 'description',
        schoolYear: 'school year',
        level: 'level',
        appNameTip: 'Click on the right button to edit the application name',
        appNote: 'application note',
        peopleList: 'people list',
        templateName: 'student list import template',
        overriteImport: 'overwrite import',
        incrementImport: 'increment import',
        releaseBusinessConfirm: 'Confirm the release of this business?',
        announcing: 'release...',
        releaseBusinessSuccess: 'successful business release',
        stopBusinessConfirm:
          'Unavailable after business deactivation,Are you sure you want to disable this business period?',
        removeBusinessConfirm: 'Are you sure to delete this business period?',
        removeSuccessTip: 'successfully deleted',
        addNewTip: 'Please set up the app’s form and participating roles~',
        startTimeTip: 'start time cannot be later than end time',
        endTimeTip: 'end time cannot be earlier than start time',
        saveBusinessSuccess: 'business period saved successfully',
        releaseTip:
          'App will be visible to users after they are published, Are you sure to release?',
        dropOffTip:
          'App will not be visible to users after it is removed, Are you sure you want to leave?',
        success: 'success',
        nameError: 'error:name is required',
        modifySuccess: 'successfully modified',
        editIcon: 'edit icon',
        directJump: 'Click on the app to jump directly',
        useBusiness: 'Click to apply for a jump (using the business period)',
        linkUrlPlaceholder: 'Please enter a third party link'
      },
      freshmanMainPage: {
        apply: 'Applications',
        searchPlaceholder: 'Input the name of application, please!',
        guide: 'freshman guide',
        tuitionFeeInfoStatus: 'tuition fee',
        accommodationPaymentInfoStatus: 'accommodation payment',
        comparisonOfPhotos: 'comparison of photos',
        underLineInformationConsistencyComparisonIndex:
          'under line information consistency comparison index',
        studentsArrivingAtSchool: 'students arriving at school',
        greenChannelApplicationStatus: 'green channel application',
        reservationsOnTheStatusOfApplicationForAdmissionStatus:
          'reservations on the status of application for admission',
        announce: 'announce',
        status: 'status',
        all: 'all',
        school: 'school',
        college: 'college',
        instructor: 'instructor',
        personInfoResult: 'Personal Information',
        arriveSchoolInfoResult: 'School Arriving',
        militaryTrainingClothesInfoResult: 'Training Cloth Infomation',
        noMore: 'It is all, tks!',
        more: 'Go on to check!',
        empty: 'No message, tks!'
      },
      freshmanManage: {
        tableName: 'freshman manage',
        studentIdBinding: 'student number binding',
        add: 'add',
        freshmanAccount: 'freshman account',
        editFreshmanGuide: 'edit freshman guide',
        account: 'account',
        password: 'freshman password',
        endTime: 'freshman login deadline',
        studentId: 'studentId',
        name: 'name',
        cancel: 'cancel',
        save: 'save',
        saveSuccessTip: 'save successfully',
        saveFailedTip: 'failed',
        overriteImport: 'overrite import',
        incrementImport: 'increment import',
        execlName: 'student ID update template',
        freshmanInfoExeclName: 'freshman information import template'
      },
      announcementManage: {
        name: 'name',
        announcement: 'announcement',
        writeAnnouncement: 'write announcement',
        publishTime: 'publish time',
        opt: 'operate',
        pageViews: 'pageviews',
        delete: 'delete',
        continueEditing: 'continue editing',
        publish: 'publish',
        draft: 'save as draft',
        titlePlaceholder: 'Please enter a title',
        contentPlaceholder: 'Please enter the announcement content',
        insertPicture: 'insert picture',
        insertAttachment: 'insert attachment',
        deleteConfirmText: 'Are you sure you want to delete this announcement?',
        deleteSuccessTip: 'delete successfully',
        saveSuccessTip: 'save successfully',
        publishSuccessTip: 'publish successfully',
        titleTip: 'The title can not be blank',
        cancelEditText:
          'Do you want to close the popup window? Data will not be recovered after it is closed',
        system: 'system'
      },
      organizationManage: {
        schoolTitle: 'school organization',
        collegeTitle: 'college organization',
        add: 'add',
        organization: 'organization',
        cancel: 'cancel',
        confirm: 'confirm',
        namePlaceholder: 'enter organizationt name',
        instructorPlaceholder: 'enter instructor ID',
        instructor: 'instructor',
        addOrganization: 'add organization',
        batchAddOrganization: 'batch add organization',
        export: 'export',
        opt: 'opt',
        edit: 'edit',
        dsable: 'dsable',
        enable: '启用',
        overriteImport: 'overrite import',
        incrementImport: 'increment import',
        optTips: 'Successful operation',
        orgNameTips: 'Organization name is required',
        orgInstructorNoTips: 'Instructor ID is required'
      },
      activityTypeManage: {
        title: 'activity type manage',
        opt: 'opt',
        edit: 'edit',
        name: 'activity type name',
        add: 'add',
        activityType: 'activity type',
        cancel: 'cancel',
        confirm: 'confirm',
        typeNamePlaceholder: 'enter activity type name',
        setActivityReviewProcess: 'Set up an activity review process',
        delete: 'delete',
        removeConfirmTip: 'Are you sure to remove this record?',
        removeFailedTip: 'Failed'
      },
      activityContentTypeManage: {
        add: 'add',
        type: 'type',
        name: 'name',
        cancel: 'cancel',
        confirm: 'confirm',
        delete: 'delete',
        category: 'category',
        select: 'select',
        edit: 'edit',
        child: 'child',
        typeNamePlaceholder: 'Please enter a category name within 15 words',
        childCategoryPlaceholder:
          'Add one or more subcategories at the same time (can not exceed 15 words)'
      },
      account: {
        logout: 'Logout',
        login: 'Log in',
        visitor: 'visitor'
      },
      comboAndDate: {
        daysOfWeek: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
        limit: 'Limit reached ({{limit}} items max).',
        loading: 'Loading...',
        minLength: 'Min. Length',
        months: [
          'January',
          'February',
          'March',
          'April',
          'May',
          'June',
          'July',
          'August',
          'September',
          'October',
          'November',
          'December'
        ],
        notSelected: 'Nothing Selected',
        required: 'Required',
        search: 'Search',
        datePlaceholder: 'choose a date'
      },
      nav: {
        navigation: 'guide',
        searchPlaceholder: 'Search for business'
      },
      table: {
        hiddenCol: 'HiddenCols',
        pageAllCheck: 'Page',
        tableAllCheck: 'All',
        checked: 'checked',
        strip: '',
        searchCancel: 'cancel',
        searchGo: 'search',
        colCheck: 'check',
        colOrder: '#',
        pageGoPlaceholder: 'page number',
        pageGoBtn: 'GO',
        searchPlaceholder: 'search',
        unsigned: 'unsign',
        isNullTip: 'Data not found ~',
        total: 'Total records',
        records: '',
        eachPage: 'each page'
      },
      tree: {
        searchPlaceholder: 'search for',
        searchIconTitle: 'search',
        editIconTitle: 'edit',
        addIconTitle: 'add',
        deleteIconTitle: 'delete',
        saveIconTitle: 'save',
        newNodeTitle: 'new node'
      },

      manageTypeLayout: {},
      permission: {
        resource: 'Resource',
        optionId: 'optionID',
        optionName: 'OptionName',
        optionPlaceholder: 'can\'t contain ":"',
        resourceVal: 'ResourceValue',
        resourcePlaceholder: 'can\'t contain ":"',
        permissionList: 'Permission List',
        cancel: 'cancel',
        saveSuccessTip: 'save successfully',
        saveFailedTip: 'Failed',
        addSuccessTip: 'add successfully',
        addFailedTip: 'Failed',
        add: 'save',
        edit: 'save',
        confirmMsg: 'Are you sure to delete this limit?',
        deleteSuccessTip: 'delete successfully',
        deleteFailedTip: 'Failed'
      },
      role: {
        tableName: 'Roles List',
        addNew: 'add',
        addSuccessTip: 'add successfully',
        addFailedTip: 'Failed',
        role: 'Role',
        roleName: 'RoleName',
        usersGroup: 'Users Group',
        groupName: 'Group Name',
        opt: 'options',
        roleNamePlaceholder: 'role name please',
        cancel: 'cancel',
        bindResource: 'Binding Resource',
        resourceList: 'Resource List',
        bind: 'bind',
        bindSuccessTip: 'bind successfully',
        bindFailedTip: 'Failed',
        bindUser: 'Binding Role',
        bindUsers: 'Binding Group of Users',
        usersList: 'User Group List',
        roleList: 'Roles List',
        edit: 'edit',
        editSuccessTip: 'edit successfully',
        editFailedTip: 'Failed',
        remove: 'remove',
        removeConfirmTip: 'Are you sure to remove this record?',
        removeSuccessTip: 'remove successfully',
        removeFailedTip: 'Failed',
        bindLimits: 'Binding Limits'
      },
      menuManage: {
        treeTitle: 'Menu List( Click item to bind user groups )',
        userTreeTitle: 'Binding Users',
        cancel: 'cancel',
        bind: 'bind',
        bindFailedTip: 'Failed'
      },
      wordsManage: {
        tableName: 'DictTypes Table',
        addNew: 'Add',
        wordType: 'Dictionary Type',
        typeName: 'TypeName',
        opt: 'options',
        wordsTree: 'Dictionary Tree',
        wordInfo: 'Dictionary Infomation',
        cancel: 'cancel',
        close: 'close',
        edit: 'edit',
        editSuccessTip: 'Edit successfully',
        editFailedTip: 'Failed',
        remove: 'remove',
        removeConfirmTip: 'Are you sure to remove this record？',
        removeSuccessTip: 'Remove successfully',
        removeFailedTip: 'Failed',
        addFailedTip: 'Failed',
        checkWords: 'Check Type',
        dictValue: 'Dictionary Value',
        sort: 'Sort Value'
      },
      projectManage: {
        typeTable: 'List of project type',
        projectTable: 'Table of Project',
        projectName: 'Project Name',
        opt: 'options',
        hrefType: 'Type of Hrefs',
        typeForm: 'Form',
        typeOuter: 'Webside of Outer',
        showName: 'Name in other system',
        proType: 'Project Type',
        school: 'school',
        college: 'college',
        addNew: 'add project',
        addBusiness: 'business',
        checkBusiness: 'check',
        edit: 'edit',
        remove: 'remove',
        removeConfirmTip: 'Are sure to remove this record？',
        back: 'back',
        cancel: 'cancel',
        sure: 'save',
        checkPros: 'Project Detail',
        saveIconTitle: 'save',
        saveFailedTip: 'Save failed'
      },
      schoolProManager: {
        tableName: 'Projects Managers List',
        optLog: 'options log',
        collegeName: 'College Name',
        projectName: 'Project Name',
        manager: 'Managers',
        isSet: 'ManagerAssigned',
        set: 'Assign Manager',
        test: 'search No.',
        add: 'add new manager',
        testErrorTip: 'Not matched~',
        managerExistTip: 'Manager Exist',
        back: 'back',
        opt: 'option',
        yes: 'Yes',
        no: 'No'
      },
      bussinessManage: {
        bussinessTable: 'Business Table',
        bussinessName: 'Business Name',
        projectName: 'Project Name',
        bussinessLimit: 'Time Limit',
        bussinessStart: 'Start Time',
        bussinessEnd: 'End Time',
        schoolYear: 'School Year',
        bussinessStatus: 'Business Status',
        opt: 'options',
        addNew: 'add',
        edit: 'edit',
        remove: 'remove',
        removeConfirmTip: 'Are you sre to remove this record？',
        back: 'back',
        cancel: 'cancel',
        sure: 'save',
        required: 'is required',
        yes: 'Yes',
        no: 'No'
      },
      appManage: {
        student: 'Application of Students',
        teacher: 'Application of Teachers',
        freshman: 'Application of Freshments',
        instructor: 'Application of Instructor',
        workflow: 'Workflow Engine',
        link: 'Third party Link',
        form: 'Form Engine',
        appManage: 'Application Management',
        createApp: 'Create Application',
        createAppPlaceholder: 'Name of Application please.(25 letters limit)',
        createAppType: 'Create Application Types',
        createAppTypePlaceholder:
          'Name of Application Type please. (16 letters limit)',
        selectAppType: 'Create Application with type',
        hot: 'Hot Application',
        cancel: 'cancel',
        sure: 'sure',
        appExistTip: 'Application exist, operation limit！',
        appTypeRemoveConfirm: 'Are you sure to remove this type?',
        appRemoveConfirm: 'Are you sure to remove this application?',
        appAddTip1: 'Name of type is required!',
        appAddTip2: 'Category of type is required!',
        appAddTip3: 'Operation failed!',
        editTip1: 'Unopened',
        editTip2: 'Required info is null!',
        saveSuccessTip1: 'Operation success.',
        saveSuccessTip2: 'Operation success.',
        saveSuccessTip3: 'Operation success.'
      },
      formManage: {
        empty: 'Empty',
        backTip: 'Save it, then leave?',
        cancel: 'cancel',
        preview: 'preview',
        sure: 'save',
        library: 'Components library',
        searchPlaceholder: 'Search for',
        from: 'From',
        basic: 'Basic Components',
        favor: 'Collected Components',
        other: 'Form Components',
        info: 'All Components of Infomation',
        allCom: 'System Components',
        script: 'Scripts',
        layout: 'Layouts',
        help: 'Attributes setting of the component',
        title: 'name',
        basicAttr: 'Basic Attributes',
        styleAttr: 'Styles',
        verifyAttr: 'Verification',
        collectionAttr: 'collector',
        events: 'Actions',
        on: 'on',
        off: 'off',
        init: 'options setting',
        defaultValue: 'Initial Value',
        way: 'wayOfInit',
        api: 'API',
        dict: 'Dict',
        add: 'add',
        remove: 'remove',
        duplicateTip: 'Duplicate with long tap',
        hrTip: 'Change the with with dragging',
        vrTip: 'Change the height with dragging',
        optionTip: 'Option name, please',
        fileMaxSizeTip: 'The max file size is: ',
        fieldTypeList: {
          input: 'Input',
          number: 'Number',
          radio: 'Radio',
          checkbox: 'Checkbox',
          select: 'Select',
          datetime: 'Datetime',
          label: 'LabelText',
          image: 'Image',
          splitLine: 'SplitLine',
          attachment: 'Attachment',
          map: 'Location',
          table: 'Table',
          address: 'Address',
          signature: 'Signature'
        },
        attrName: {
          placeholder: 'InputTip',
          rows: 'MaxLineHeight',
          options: 'Options',
          precision: 'precision(decimal places)',
          dateFormat: 'DateFormat',
          autoNumber: 'RowNumShow',
          checkable: 'LineCheck',
          autoSelect: 'AutoSelect',
          exportable: 'Exportable',
          importable: 'Importable',
          joinStatistics: 'JoinStatistics',
          joinTableCompare: 'JoinTableCompare',
          content: 'content',
          color: 'LineColor',
          fontSize: 'FontSize(px)',
          regexExpression: 'RegularExpression',
          maxWidth: 'ImageWidth(px)',
          maxHeight: 'ImageHeight(px)',
          minWidth: 'MinWidth(px)',
          minHeight: 'MinHeight(px)',
          maxLength: 'MaxLength',
          minLength: 'MinLength',
          maxSelect: 'MaxSelections',
          minSelect: 'minSelections',
          maxValue: 'MaxValue',
          minValue: 'MinValue',
          maxDate: 'MaxDate',
          minDate: 'minDate',
          fileFormat: 'DocumentType',
          fileMaxNumber: 'MaxUploaderofDocument',
          fileSize: 'MaxSizeofDocument(KB)'
        },
        initial: {
          fixedValue: 'FixedValue',
          sqlQuery: 'SQLQuery',
          dataSet: 'Dataset',
          dataField: 'DataField',
          url: 'API',
          method: 'Method',
          key: 'DataKey',
          params: 'Params',
          className: 'Class Name',
          functionName: 'Function Name',
          currentTime: 'CurrentTime',
          definedTime: 'DefinedTime',
          paramKey: 'Key',
          paramValue: 'Value',
          paramObj: 'parameter',
          dynamic: 'latest data',
          keyInValidTip: 'Key or Value cannot be null!',
          keyExistTip: 'Key is already exist!'
        },
        collector: {
          flag: 'flag',
          dataSet: 'Dataset',
          dataField: 'DataField',
          coverTable: 'clear old data',
          deleteByKey: 'CollectToDelete'
        },
        eventsList: {
          FOCUS: 'FOCUS',
          BLUR: 'BLUR',
          CHANGE: 'VALUE CHANGE',
          showComponent: 'Show components',
          hideComponent: 'Hide components',
          setText: 'Set value',
          triggerEvent: 'Trigger other event',
          script: 'Defined script',
          formFields: 'Components',
          formFieldsEvents: 'Events',
          formFieldsValue: 'Value',
          fieldsList: 'ComponentsList',
          valueList: 'ValueList',
          eventsList: 'EventsList',
          actionList: 'ActionsList',
          orgAction: 'Description',
          setAction: 'Action Setting',
          addEvent: 'Events add',
          addTip: 'The event info is not correct, please check it again!',
          set: 'Set',
          valueTo: 'value to',
          trigger: 'Trigger',
          events: 'event',
          condition: 'Condition',
          caseName: 'CaseName'
        }
      },
      flowSetManage: {
        cancel: 'cancel',
        sure: 'save',
        relevanceTip: 'Associate form, Please',
        relevanceTip2: 'Association Form',
        nodeName: 'Node Name',
        applicant: 'Form Applicant',
        applyOnceLimit: 'Apply once limit',
        distributarySet: 'Distributary Setting',
        roleSet: 'Role Setting',
        createNewRole: 'Create Role',
        newRolePlaceholder: 'applicant name + node name + manager',
        readWritePermission: 'Read&Write Authorities',
        alreadyChecked: 'Already Checked',
        setInto: ', set into',
        operatingPermission: 'Operating Authorities',
        conditionName: 'Condition Name',
        conditionField: 'Condition Field',
        createBranch: 'Create Branch',
        other: 'Other',
        backTip: 'Save it, then leave？',
        commitTip: 'Commit successfully',
        roleEmptyTip: 'Role name is required!',
        roleExistTip: 'Role name is exist!',
        removeNodeTip: 'Remove the node firstly, Please!',
        distributaryData: {
          bySchool: 'bySchool',
          byClass: 'byClass',
          byTeacher: 'byTeacher',
          byCollege: 'byCollege',
          byOrganization: 'byOrganization',
          byBuilding: 'byBuilding',
          byParty: 'byParty',
          byTutor: 'byTutor',
          byVolunteer: 'byVolunteer'
        },
        operatorData: {
          required: 'required',
          optional: 'optional',
          readonly: 'readonly',
          hide: 'hide'
        },
        permissionData: {
          reject: 'reject',
          rejectTo: 'Reject to',
          lastNode: 'last node',
          optional: 'any node user select',
          rejectBackTo: 'Reject then go back to',
          flowWay: 'last node',
          revocation: 'revocation',
          deliverTo: 'Deliver to',
          sendTo: 'Send to',
          batch: 'Batch operation',
          cancelByUser: 'Cancel flow by user'
        },
        condition: {
          '=': 'equal',
          include: 'contains',
          exclude: 'not contains',
          '<': 'less then',
          '<=': '<=',
          '>': '>',
          '>=': '>=',
          '!=': '!=',
          between: 'between',
          notBetween: 'not between'
        }
      },
      orgManage: {
        tableName: 'Organization List',
        importExcel: 'Data Import',
        downLoad: 'Model Download',
        orgName: 'Org Name',
        orgCode: 'Org Code',
        orgParentCode: "Parent's Code",
        leaderName: 'Leader',
        tags: 'Tags',
        opt: 'options',
        edit: 'edit',
        remove: 'remove',
        removeConfirmTip: 'Are sure to remove this organization？',
        cancel: 'cancel',
        bindSuccessTip: 'Tags binding successfully',
        tagsPlaceholder: "defined your tags, split by ',' please",
        pCodeTip: 'No matched!',
        leaderTip: 'No matched!'
      },
      infoManage: {
        addNew: 'add',
        edit: 'edit',
        show: 'check',
        studentIdBinding: 'studentId Binding',
        editBase: 'edit',
        tableName: 'Teachers',
        tableNameStu: 'Students',
        tableNameParticipator: 'Participator',
        cancel: 'cancel',
        back: 'back',
        save: 'save',
        confirm: 'sure',
        search: 'search',
        remove: 'remove',
        modelDownload: 'download',
        modelImport: 'Model Import',
        imageImport: 'Image Import',
        initModel: 'Initial Model of Teachers',
        initModelStu: 'Initial Model of Students',
        baseModel: 'Base Model of Teachers',
        baseModelParticipator: 'Base Model of Participator',
        baseModelStu: 'Base Model of Student',
        baseModelNewStu: 'New Number Model of Students',
        statusModelStu: 'Status Model of Students',
        stuBaseInfo: 'BaseInfo of Studnent',
        opt: 'options',
        importSuccessTip: 'importSuccessTip',
        importFailedTip: 'importFailedTip',
        overrideImport: 'overrideImport',
        incrementImport: 'incrementImport',
        advancedSearch: 'advancedSearch',
        layoutManage: 'layoutManage',
        setTip: 'Choose a educationLevel to start!',
        nullColumnTypesTip: 'No type of infomation exist!',
        successTip: 'Success!',
        startSet: 'Start',
        reset: 'reset',
        export: 'export',
        exportStat: 'export stat',
        schoolStudentManage: 'schoolStudentManage',
        collegeStudentManage: 'collegeStudentManage',
        myStudentManage: 'myStudentManage',
        loading: 'loading...',
        teacherFields: {
          teacherId: 'teacherId',
          organisation: 'organisation',
          name: 'name',
          nameSpell: 'nameSpell',
          usedName: 'usedName',
          sex: 'sex',
          birthday: 'birthday',
          birthPlace: 'birthPlace',
          nativePlace: 'nativePlace',
          nation: 'nation',
          nationality: 'nationality',
          identificationType: 'identificationType',
          idCardType: 'idCardType',
          identificationNo: 'identificationNo',
          idCardNo: 'idCardNo',
          idCardValidity: 'idCardValidity',
          maritalStatus: 'maritalStatus',
          hongKongMacaoTaiwanOversea: 'hongKongMacaoTaiwanOversea',
          healthStatus: 'healthStatus',
          faith: 'faith',
          bloodType: 'bloodType',
          highestEducation: 'highestEducation',
          degreeOfEducation: 'degreeOfEducation',
          joinTheWorkingYears: 'joinTheWorkingYears',
          timeToSchool: 'timeToSchool',
          timeStartWage: 'timeStartWage',
          timeStartTeaching: 'timeStartTeaching',
          authorizedStrength: 'authorizedStrength',
          workerCategory: 'workerCategory',
          courseSituation: 'courseSituation',
          fileNo: 'fileNo',
          fileText: 'fileText',
          onTheJobState: 'onTheJobState',
          speciality: 'speciality',
          photo: 'photo',
          subjectType: 'subjectType',
          primaryDiscipline: 'primaryDiscipline',
          secondaryDiscipline: 'secondaryDiscipline',
          postalCode: 'postalCode',
          mailingAddress: 'mailingAddress',
          homeAddress: 'homeAddress',
          currentAddress: 'currentAddress',
          registeredPermanentResidence: 'registeredPermanentResidence',
          accountCategory: 'accountCategory',
          officePhone: 'officePhone',
          homePhone: 'homePhone',
          mobilePhone: 'mobilePhone',
          fax: 'fax',
          mail: 'mail',
          homePage: 'homePage',
          campusNo: 'campusNo'
        },
        infoFields: {
          studentId: 'studentID',
          freshmanId: 'freshmanID',
          examinationNumber: 'examinationNumber',
          accountId: 'Account',
          password: 'Password',
          college: 'Code of College',
          collegeName: 'Name of College',
          department: 'Code of Department',
          grade: 'Grade',
          studentType: 'Student Type',
          teacherId: 'teacherID',
          name: 'Name',
          nameSpell: 'Name of Pinyin',
          usedName: 'Old Name',
          passportName: 'Passport Name',
          chineseName: 'Chinese Name',
          foreignFirstName: 'Foreign First Name',
          foreignLastName: 'Foreign Second Name',
          sex: 'Sex',
          organisation: 'Organisation',
          phone: 'Phone',
          phoneNumber: 'Phone Number',
          instructor: 'Instructor',
          mail: 'Mail',
          identificationNo: 'ID number',
          idCardType: 'IDCard Type',
          idCardNo: 'ID number',
          idCardValidity: 'Valid Date of IDCard',
          birthday: 'Birthday',
          originPlace: 'Origin Place',
          region: 'Region',
          nativePlace: 'Native Place',
          villageStudent: 'Village Student',
          accountsNature: 'Accounts Nature',
          domicilePlace: 'Domicile Place',
          continent: 'Continent',
          motherLanguage: 'Mother Language',
          livingCity: 'Living City',
          birthPlace: 'Birth Place',
          faith: 'Faith',
          current: 'current',
          personnelRelationsIn: 'PersonnelRelationsIn',
          recordIn: 'recordIn',
          haveEarning: 'haveEarning',
          greenChannel: 'greenChannel',
          loansEntrance: 'loansEntrance',
          physicalCondition: 'physicalCondition',
          weight: 'weight',
          bloodType: 'bloodType',
          height: 'height',
          areaType: 'areaType',
          dataSource: 'dataSource',
          chineseLevel: 'chineseLevel',
          englishLevel: 'englishLevel',
          computerLevel: 'computerLevel',
          expenditureMethod: 'expenditureMethod',
          userId: 'userId',
          permanentAddress: 'permanentAddress',
          maritalStatus: 'maritalStatus',
          undergraduateCollegesProfessional:
            'undergraduateCollegesProfessional',
          masterDegreeCollegesProfessional: 'masterDegreeCollegesProfessional',
          drGraduationCollegesProfessional: 'drGraduationCollegesProfessional',
          speciality: 'speciality',
          hobbies: 'hobbies',
          mandarinLevel: 'mandarinLevel',
          onTheJobState: 'onTheJobState',
          workerCategory: 'workerCategory',
          mainResearchTopics: 'mainResearchTopics',
          asTheFirstClass: 'asTheFirstClass',
          certificates: 'certificates',
          namepy: 'namepy',
          highestEducation: 'highestEducation',
          degree: 'degree',
          timeToSchool: 'timeToSchool',
          typeOfTch: 'typeOfTch',
          adminPost: 'adminPost',
          executiveLevel: 'executiveLevel',
          professionalAndTechnicalProfession:
            'professionalAndTechnicalProfession',
          workersTechnicalLevel: 'workersTechnicalLevel',
          nation: 'nation',
          politicalStatus: 'politicalStatus',
          hongKongMacaoTaiwanOversea: 'hongKongMacaoTaiwanOversea',
          healthStatus: 'healthStatus',
          nationality: 'nationality',
          source: 'source'
        }
      },
      dictionaryManage: {
        tableTitle: 'Dictionary List',
        addNew: 'Add Dictionary',
        dictionaryTypeName: 'Type Name',
        dictionaryNameInputPlaceholder: 'Dictionary Name',
        dictionaryCreateOption: 'Add Option',
        dictionaryOptionInputPlaceholder: 'Option Name',
        dictionaryOption: 'Option',
        operation: 'Operation',
        dictionaryTypeSearchPlaceholder: 'Please Input The Dictionary Name ',
        dictionaryType: 'Dictionary',
        edit: 'Edit',
        remove: 'Remove',
        cancel: 'Cancel',
        submit: 'Submit',
        removeConfirmTip: 'Are You Sure Remove This？',
        editSuccessTip: 'Modify Successfully'
      },
      systemRoleManage: {
        tableTitle: 'System Role List',
        add: 'Add',
        edit: 'Edit',
        clear: 'Clear',
        roleName: 'Role Name',
        operation: 'Operation',
        roleNameSearchPlaceholder: 'Please input the role name',
        addUserTip: 'Please check the user firstly',
        addUserConfirmTip: 'Are you sure to add the user to the role？',
        user: 'User',
        role: 'Role',
        userNo: 'User Number',
        username: 'Username',
        check: 'Check',
        cancel: 'Cancel',
        submit: 'Submit',
        clearComfirmTip: 'Are you sure to clear all user of the role?',
        checkUserTip: 'Please input the user No firstly',
        userNoExistedTip: 'Sorry, the user No is not existed'
      },
      schoolRoleManage: {
        tableTitle: 'School Role List',
        add: 'Add',
        edit: 'Edit',
        clear: 'Clear',
        roleName: 'Role Name',
        operation: 'Operation',
        roleNameSearchPlaceholder: 'Please input the role name',
        addUserTip: 'Please check the user firstly',
        addUserConfirmTip: 'Are you sure to add the user to the role？',
        user: 'User',
        role: 'Role',
        userNo: 'User Number',
        username: 'Username',
        check: 'Check',
        cancel: 'Cancel',
        submit: 'Submit',
        clearComfirmTip: 'Are you sure to clear all user of the role?',
        checkUserTip: 'Please input the user No firstly',
        userNoExistedTip: 'Sorry, the user No is not existed',
        exchangeDimensionLabel1: 'Change to user dimension',
        exchangeDimensionLabel2: 'Change to role dimension',
        roleDescription: 'role description'
      },
      collegeRoleManage: {
        tableTitle: 'College Role List',
        add: 'Add',
        clear: 'Clear',
        operation: 'Operation',
        addUserTip: 'Please check the user firstly',
        addUserConfirmTip: 'Are you sure to add the user to the role？',
        user: 'User',
        role: 'Role',
        userNo: 'User Number',
        username: 'Username',
        check: 'Check',
        cancel: 'Cancel',
        submit: 'Submit',
        clearComfirmTip: 'Are you sure to clear all user of the role?',
        checkUserTip: 'Please input the user No firstly',
        userNoExistedTip: 'Sorry, the user No is not existed',
        exchangeDimensionLabel1: 'Change to user dimension',
        exchangeDimensionLabel2: 'Change to role dimension',
        noManageCollegeTip: 'You have no manage college'
      },
      accommodationResources: {
        tableName: 'accommodation resources list',
        add: 'add',
        edit: 'edit',
        single: 'single',
        batch: 'batch',
        confirm: 'confirm',
        cancel: 'cancel',
        campus: 'campus',
        park: 'park',
        building: 'building',
        buildingProperty: 'building property',
        numberOfLayers: 'number of layers',
        numberOfRooms: 'number of rooms',
        opt: 'opt',
        delete: 'delete',
        roomsList: 'rooms list',
        floorPlan: 'floor plan',
        overlayImport: 'overlay import'
      },
      accommodationStaff: {
        peopleList: {
          allStaff: 'school people list',
          liveStaff: 'live people list'
        },
        export: 'export',
        add: 'add',
        single: 'single',
        batch: 'batch',
        edit: 'edit',
        delete: 'delete',
        check: 'check',
        import: 'import',
        cancel: 'cancel',
        confirm: 'confirm',
        peopleType: 'people type',
        cultureLevel: 'culture level',
        schoolSystem: 'school system',
        name: 'name',
        set: 'set',
        freshmanNo: 'freshman number',
        userNo: 'user number',
        college: 'college',
        grade: 'grade',
        instructor: 'instructor',
        opt: 'opt',
        overlayImport: 'overlay import',
        templateName: 'batch add people',
        formFieldsLabel: {
          staffSearch: 'staff search',
          campus: 'campus',
          park: 'park',
          building: 'building',
          roomNumber: 'roomNumber',
          expectedCheckInTime: 'expected check-in time',
          realCheckInTime: 'real check-in-time',
          expectedLeaveDormitoryTime: 'expected leave dormitory time',
          realLeaveDormitoryTime: 'real leave dormitory time',
          bed: 'bed',
          paymentSituation: 'payment situation',
          checkInSituation: 'checkIn situation'
        }
      },
      entryAndEexit: {
        tableName: 'entryAndExit list',
        sure: 'sure',
        cancel: 'cancel',
        name: 'name',
        studentId: 'student ID',
        account: 'freshman Id',
        educationLevel: 'education level',
        grade: 'grade',
        college: 'college',
        studentIdPlaceholder: 'Please enter student ID',
        namePlaceholder: 'Please enter name',
        accountPlaceholder: 'Please enter freshman ID',
        paymentStatus: 'payment status',
        dormitory: 'current dormitory',
        checkInStatus: 'check in status',
        opt: 'operation',
        entryDormitory: 'entry dormitory',
        leaveDormitory: 'leave dormitory',
        entryDormitoryConfirmTip: 'Are you sure to check in?',
        leaveDormitoryConfirmTip: 'Are you sure to check out?',
        batchEntry: 'batch entry',
        batchExit: 'batch exit',
        overlayImport: 'overlay import'
      },
      pay: {
        tableName: 'pay list',
        add: 'add',
        edit: 'edit',
        batch: 'batch',
        batchName: 'batchName',
        batchNamePlaceholder: 'Please enter batch name',
        schoolYear: 'year',
        id: 'batch id',
        opt: 'opt',
        remove: 'remove',
        removeConfirmTip: 'Are you sure to remove this record?',
        removeSuccessTip: 'remove successfully',
        removeFailedTip: 'failed',
        studentList: 'student list',
        import: 'import',
        export: 'export',
        sure: 'sure',
        cancel: 'cancel',
        overlayImport: 'overlayImport'
      },
      payStudentList: {
        parentPage: 'back pay list',
        tableName: 'table name',
        batch: 'batch',
        import: 'import',
        schoolYear: 'year',
        name: 'name',
        studentId: 'student Id',
        account: 'freshman Id',
        college: 'college',
        educationLevel: 'education level',
        grade: 'grade',
        paymentStatus: 'payment status',
        isGreenChannel: 'is green channel',
        remark: 'remark',
        opt: 'option',
        studentNamePlaceholder: 'Please enter student name',
        studentIdPlaceholder: 'Please enter student ID',
        accountPlaceholder: 'Please enter freshman ID',
        edit: 'edit',
        sure: 'sure',
        cancel: 'cancel',
        overlayImport: 'overlay import'
      },
      changingDormitory: {
        tableName: 'changing dormitory list',
        name: 'name',
        namePlaceholder: 'Please enter student name',
        studentId: 'student Id',
        studentIdPlaceholder: 'Please enter student ID',
        account: 'account',
        accountIdPlaceholder: 'Please enter freshman ID',
        college: 'college',
        educationLevel: 'education level',
        grade: 'grade',
        dormitory: 'current dormitory',
        opt: 'opt',
        singleChangingDormitory: 'single changing dormitory',
        doubleChangingDormitory: 'double changing dormitory',
        userCheckInStatus: 'check in status',
        relCheckInTime: 'check in time',
        expectRetirementTime: 'expected retirement time',
        currentStudentName: 'current student name',
        campus: 'campus',
        park: 'park',
        building: 'building',
        roomNumber: 'room number',
        bedNumber: 'bed number',
        checkFloorPlan: 'check floor plan',
        changingDormitory: 'changing dormitory',
        cancel: 'cancel',
        changingDormitoryConfirmTip: 'Are you sure to change Dormitory?',
        check: 'check'
      },
      log: {
        logList: {
          inOutChangeRecord: 'in&Out&Change Record',
          optRecord: 'operation Record'
        },
        name: 'name',
        userNo: 'user No',
        dormitory: 'dormitory',
        operation: 'operation',
        operatorType: 'operator Type',
        operatorUserNo: 'operator User No',
        operatorName: 'operator Name',
        operationTime: 'operation Time',
        ip: 'ip',
        time: 'time',
        reset: 'reset',
        search: 'search',
        fileName: 'file Name'
      },
      statistics: {
        statisticsList: {
          dormitoryStatistics: 'dormitory Statistics',
          peopleStatistics: 'people Statistics'
        },
        campusName: 'campus Name',
        zoneName: 'zone Name',
        buildingName: 'building Name',
        totRoom: 'total Room',
        totBed: 'total Bed',
        conditionRoom: 'condition Room',
        roomNo: 'room No',
        bedNo: 'bed No',
        usedFor: 'used For',
        toilet: 'toilet',
        haveBalcony: 'have Balcony',
        maxNumber: 'max Number',
        leftNumber: 'left Number',
        livingStatus: 'living Status',
        totUser: 'total User',
        conditionUser: 'condition User',
        userName: 'user Name',
        userType: 'user Type',
        userNo: 'user No',
        sex: 'sex',
        college: 'college',
        educationLevel: 'education Level',
        grade: 'grade',
        userCheckInStatus: 'user Check In Status',
        inTime: '(expect)in Time',
        outTime: '(expect)out Time',
        time: 'time',
        reset: 'reset',
        search: 'search',
        export: 'export',
        switchDormitoryDetailedTable: 'switch Dormitory Detailed Table',
        switchStatisticsTable: 'switch Statistics Table',
        switchPeopleDetailedTable: 'switch People Detailed Table'
      }
    }
  }

  return l[lang]
}
export function getIcons (icon) {
  return icons(icon)
}

Date.prototype.format = function (fmt) {
  var o = {
    'M+': this.getMonth() + 1, // 月份
    'd+': this.getDate(), // 日
    'H+': this.getHours(), // 小时
    'm+': this.getMinutes(), // 分
    's+': this.getSeconds(), // 秒
    'q+': Math.floor((this.getMonth() + 3) / 3), // 季度
    S: this.getMilliseconds() // 毫秒
  }
  if (/(y+)/.test(fmt)) {
fmt = fmt.replace(
      RegExp.$1,
      (this.getFullYear() + '').substr(4 - RegExp.$1.length)
    )
}
  for (var k in o) {
    if (new RegExp('(' + k + ')').test(fmt)) {
fmt = fmt.replace(
        RegExp.$1,
        RegExp.$1.length == 1 ? o[k] : ('00' + o[k]).substr(('' + o[k]).length)
      )
}
  }
  return fmt
}
